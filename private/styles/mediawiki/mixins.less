// Common LESS mixin library for MediaWiki
//
// By default the folder containing this file is included in the LESS import paths,
// which makes this file importable by all less files via `@import 'mediawiki.mixins.less';`.
//
// The mixins included below are considered a public interface for MediaWiki extensions.
// The signatures of parametrized mixins should be kept as stable as possible.
//
// See <http://lesscss.org/#-mixins> for more information about how to write mixins.

.background-image( @url ) {
  background-image: url( @url );
}

.horizontal-gradient( @startColor: #808080, @endColor: #fff, @startPos: 0, @endPos: 100% ) {
  background-color: average( @startColor, @endColor );
  background-image: linear-gradient( to right, @startColor @startPos, @endColor @endPos );
}

.vertical-gradient( @startColor: #808080, @endColor: #fff, @startPos: 0, @endPos: 100% ) {
  background-color: average( @startColor, @endColor );
  background-image: linear-gradient( to bottom, @startColor @startPos, @endColor @endPos );
}

// SVG support using a transparent gradient to guarantee cross-browser
// compatibility (browsers able to understand gradient syntax support also SVG).
// http://pauginer.tumblr.com/post/36614680636/invisible-gradient-technique
.background-image-svg( @svg, @fallback ) {
  background-image: url( @fallback );
  background-image: linear-gradient( transparent, transparent ), url( @svg );
}

// Shorthand for background-image-svg. Use if your PNG and SVG have the same name
// and only if you cannot use ResourceLoaderImage module for some particular reason.
.background-image-svg-quick( @url ) {
  .background-image-svg( ~'@{url}.svg', ~'@{url}.png' );
}

.list-style-image( @url ) {
  list-style-image: url( @url );
}

.hyphens( @value: auto ) {
  & when ( @value = auto ) {
    // Legacy `word-wrap`; IE 6-11, Edge 12+, Firefox 3.5+, Chrome 4+, Safari 3.1+,
    //   Opera 11.5+, iOS 3.2+, Android 2.1+
    // `overflow-wrap` is W3 standard, but it doesn't seem as if browser vendors
    //   will abandon `word-wrap` (it has wider support), therefore no duplication.
    word-wrap: break-word;
  }
  & when ( @value = none ) {
    word-wrap: normal;
  }

  // CSS3 hyphenation
  -webkit-hyphens: @value; // Safari 5.1+, iOS 4.3+
  -moz-hyphens: @value;    // Firefox 6-42
  -ms-hyphens: @value;     // IE 10-11, Edge 12+
  hyphens: @value;         // Firefox 43+, Chrome 55+, Android 62+, UC Browser 11.8+, Samsung 6.2+
}

.transform( @value ) {
  transform: @value; // Chrome 36+, Firefox 16+, IE 10+, Safari 9+, Opera 23+, iOS 9.2+, Android 5+
}

.transition( @value ) {
  transition: @value; // Chrome 26+, Firefox 16+, IE 10+, Safari 6.1+, Opera 12.1+, iOS 7+, Android 4.4+
}

// Provide a hardware accelerated transform transition
// We can't use `.transition()` because WebKit requires `-webkit-` prefix before `transform`
// Example usage: `.transition-transform( 1s, opacity 2s );`
// First parameter is additional options for `transform` transition commencing with
// duration property @see https://www.w3.org/TR/css3-transitions/#transition-duration-property
// and remaining parameters are additional transitions."
.transition-transform( ... ) {
  -webkit-backface-visibility: hidden; // Older Webkit browsers: Promote element to a composite layer & involve the GPU
  transition: transform @arguments; // Chrome 36+, Firefox 16+, IE 10+, Safari 9+, Opera 12.1+, iOS 9.2+, Android 36+
}

// TODO set relevant versions from MDN
.box-sizing( @value ) {
  box-sizing: @value; // Chrome 10+, Firefox 29+, IE 8+, Safari 5.1+, Opera 10+, iOS 5+, Android 4+
}

.box-shadow( @value ) {
  -webkit-box-shadow: @value; // Safari 3.1-5.0, iOS 3.2-4.3, Android 2.1-3.0
  box-shadow: @value; // Chrome 10+, Firefox 4+, IE 9+, Safari 5.1+, Opera 11+, iOS 5+, Android 4+
}

.column-count( @value ) {
  column-count: @value;
}

.column-width( @value ) {
  column-width: @value; // IE 10+, Opera 11.1-12.1
}

.column-break-inside-avoid() {
  break-inside: avoid-column; // IE 10+, Opera 11.1-12.1
}

.flex-display( @display: flex ) {
  display: ~'-ms-@{display}box'; // IE 10
  display: @display;
}

.flex-wrap( @wrap: wrap ) {
  -ms-flex-wrap: @wrap; // IE 10
  flex-wrap: @wrap;
}

.flex( @grow: 1, @shrink: 1, @width: auto, @order: 1 ) {
  // 2012 spec alignment to current spec
  -ms-flex-pack: justify; // IE 10 (2012 spec)
  // Current spec
  justify-content: space-between;
  width: @width; // Fallback for flex-basis
  -ms-flex: @grow @shrink @width; // IE 10
  flex: @grow @shrink @width;
  -ms-flex-order: @order; // IE 10
  order: @order;
}

/* stylelint-disable selector-no-vendor-prefix, at-rule-no-unknown */
.mixin-placeholder( @rules ) {
  // Chrome 4-56, WebKit, Blink, Edge 12-18
  &::-webkit-input-placeholder {
    @rules();
  }
  // Internet Explorer 10-11
  &:-ms-input-placeholder {
    @rules();
  }
  // Firefox 19-50
  &::-moz-placeholder {
    @rules();
  }
  // W3C Standard Selectors Level 4
  &::placeholder {
    @rules();
  }
}
/* stylelint-enable selector-no-vendor-prefix, at-rule-no-unknown */

// Screen Reader Helper Mixin
.mixin-screen-reader-text() {
  display: block;
  position: absolute !important; /* stylelint-disable-line declaration-no-important */
  clip: rect( 1px, 1px, 1px, 1px );
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  overflow: hidden;
}
