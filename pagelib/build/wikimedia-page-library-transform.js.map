{"version":3,"sources":["webpack://pcs/webpack/universalModuleDefinition","webpack://pcs/webpack/bootstrap","webpack://pcs/./src/transform/Polyfill.js","webpack://pcs/./src/transform/ElementUtilities.js","webpack://pcs/./src/transform/CollapseTable.js","webpack://pcs/./src/transform/SectionUtilities.ts","webpack://pcs/./src/transform/NodeUtilities.js","webpack://pcs/./src/transform/EditTransform.js","webpack://pcs/./src/transform/LazyLoadTransform.ts","webpack://pcs/./src/transform/CollectionUtilities.js","webpack://pcs/./src/transform/ElementGeometry.js","webpack://pcs/./src/transform/Throttle.js","webpack://pcs/./src/transform/PlatformTransform.js","webpack://pcs/./src/transform/ThemeTransform.js","webpack://pcs/./src/transform/FooterContainer.js","webpack://pcs/./src/transform/FooterLegal.js","webpack://pcs/./src/transform/FooterMenu.js","webpack://pcs/./src/transform/FooterReadMore.js","webpack://pcs/./src/transform/ReferenceCollection.js","webpack://pcs/./src/transform/AdjustTextSize.ts","webpack://pcs/./src/transform/BodySpacingTransform.ts","webpack://pcs/./src/transform/DimImagesTransform.js","webpack://pcs/./src/transform/LazyLoadTransformer.js","webpack://pcs/./src/transform/index.js","webpack://pcs/./src/transform/CompatibilityTransform.js","webpack://pcs/./src/transform/LeadIntroductionTransform.js","webpack://pcs/./src/transform/RedLinks.js","webpack://pcs/./src/transform/WidenImage.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CustomEvent","window","type","parameters","bubbles","cancelable","detail","undefined","event","document","createEvent","initCustomEvent","matchesSelector","el","selector","matches","webkitMatchesSelector","querySelectorAll","element","Array","slice","findClosestAncestor","parentElement","Polyfill","isNestedInTable","Boolean","closestInlineStyle","thisValue","style","e","isVisible","offsetWidth","offsetHeight","getClientRects","length","copyAttributesToDataAttributes","source","destination","attributes","filter","attribute","hasAttribute","forEach","setAttribute","getAttribute","copyDataAttributesToAttributes","NODE_TYPE","NodeUtilities","CLASS","ICON","CONTAINER","COLLAPSED_CONTAINER","COLLAPSED","COLLAPSED_BOTTOM","COLLAPSE_TEXT","EXPANDED","TABLE_INFOBOX","TABLE_OTHER","TABLE","isHeaderEligible","header","isHeaderTextEligible","headerText","replace","firstWordFromString","string","match","isNodeTextContentSimilarToPageTitle","node","pageTitle","firstPageTitleWord","firstNodeTextContentWord","textContent","toLowerCase","stringWithNormalizedWhitespace","trim","replaceNodeWithBreakingSpaceTextNode","parentNode","replaceChild","createTextNode","extractEligibleHeaderText","fragment","createDocumentFragment","appendChild","cloneNode","fragmentHeader","querySelector","remove","cur","lastChild","isNodeTypeElementOrText","previousSibling","nextSibling","nodeType","ELEMENT_NODE","tagName","elementScopeComparator","a","b","aHasScope","bHasScope","getTableHeaderTextArray","headerTextArray","headers","sort","indexOf","push","toggleCollapsedForContainer","container","trigger","footerDivClickCallback","children","table","footer","caption","collapsed","display","classList","add","visibility","toggleCollapseClickCallback","shouldTableBeCollapsed","blacklistIntersects","some","clazz","contains","isHidden","isInfobox","newCollapsedHeaderDiv","content","div","createElement","newCollapsedFooterDiv","innerHTML","newCaptionFragment","title","titleClass","strong","span","prepareTable","tableTitle","tableClass","footerTitle","captionFragment","containerDiv","className","nodeToReplace","replacementNode","childOfSectionTag","sectionTag","foundSectionTag","SectionUtilities","isMediaWikiSectionElement","insertBefore","removeChild","replaceNodeInSection","collapsedHeaderDiv","collapsedFooterDiv","prepareTables","infoboxTitle","otherTitle","tables","ElementUtilities","isBox","toggleCollapsedForAll","setupEventHandling","isInitiallyCollapsed","dispatchSectionToggledEvent","dispatchEvent","onclick","adjustTables","isMainPage","SECTION_TOGGLED_EVENT_TYPE","collapseTables","expandCollapsedTableIfItContainsElement","containerSelector","collapsedDiv","firstElementChild","click","test","default","BASE","SHOW","HIDE","HIDEABLE","ID","CONTENT","CONTROL","getControlIdForSectionId","sectionId","getContentIdForSectionId","setHidden","hidden","controlId","contentId","control","getElementById","createFoldHR","section","hr","expandCollapsedSectionIfItContainsElement","parent","id","getTopLevelSectionIdForElement","getSectionIDOfElement","current","getSectionOfElement","getLeadParagraphText","firstParagraphInASection","innerText","getSectionOffsets","body","sections","reduce","results","heading","parseInt","yOffset","offsetTop","prepareForHiding","getControl","toRemove","nextElementSibling","TEXT_NODE","getBoundingClientRectAsPlainObject","rect","getBoundingClientRect","top","right","bottom","left","width","height","x","y","SECTION_HEADER","TITLE","LINK_CONTAINER","LINK","PROTECTION","UNPROTECTED","PROTECTED","FORBIDDEN","IDS","TITLE_DESCRIPTION","ADD_TITLE_DESCRIPTION","DIVIDER","PRONUNCIATION","DATA_ATTRIBUTE","SECTION_INDEX","ACTION","PRONUNCIATION_URL","DESCRIPTION_SOURCE","newEditSectionLink","index","href","link","newEditSectionButton","actualLink","newEditSectionWrapper","appendEditSectionHeader","wrapper","newEditSectionHeader","level","titleHTML","showEditPencil","button","titleDescriptionElements","titleDescription","titleDescriptionSource","addTitleDescriptionString","isTitleDescriptionEditable","setEditButtons","isEditable","isProtected","documentElement","newEditLeadSectionHeader","pageDisplayTitle","pronunciationURL","descriptionElements","divider","ElementGeometry","CLASSES","PLACEHOLDER_CLASS","PLACEHOLDER_PENDING_CLASS","PLACEHOLDER_LOADING_CLASS","PLACEHOLDER_ERROR_CLASS","IMAGE_LOADING_CLASS","IMAGE_LOADED_CLASS","COPY_ATTRIBUTES","UNIT_TO_MINIMUM_LAZY_LOAD_SIZE","px","ex","em","convertImageToPlaceholder","image","placeholder","geometry","from","setProperty","spacing","ratio","heightValue","widthValue","isLazyLoadable","minWidth","widthUnit","Infinity","minHeight","heightUnit","queryLazyLoadableImages","convertImagesToPlaceholders","images","map","loadPlaceholder","retryListener","stopPropagation","preventDefault","addEventListener","removeEventListener","once","collectPageIssueElements","sectionJSON","closest","headerEl","anchor","collectHatnotes","titles","html","links","collectPageIssues","styleRegex","DimensionUnit","unit","_value","Number","_unit","getPropertyValue","fromStyle","isNaN","_width","_height","fromElement","NaN","Throttle","period","funktion","_window","_period","_function","_context","_arguments","_result","_timeout","_timestamp","throttle","throttled","queue","arguments","result","pending","delay","cancel","reset","context","args","setTimeout","Date","now","apply","Math","max","clearTimeout","ANDROID","CLASS_PREFIX","IOS","classify","navigator","userAgent","isAndroid","isIOs","setPlatform","platform","THEME","DEFAULT","DARK","SEPIA","BLACK","setThemeOnElement","theme","setTheme","pcs","containerFragment","menuSection","readMoreSection","legalSection","isContainerAttached","licenseString","licenseSubstitutionString","containerID","licenseLinkClickHandler","viewInBrowserString","browserLinkClickHandler","linkText","halves","split","buildLicenseHtml","MenuItemType","languages","lastEdited","pageIssues","disambiguation","coordinate","talkPage","MenuItem","subtitle","itemType","clickHandler","payload","CollectionUtilities","setHeading","headingString","headingID","headingElement","maybeAddItem","item","extractor","payloadExtractor","menuItem","role","containerAnchor","iconClass","documentFragmentForMenuItem","addItem","safelyRemoveEnclosures","opener","closer","enclosureRegex","RegExp","counter","stringToClean","previousString","cleanExtract","ReadMorePage","displayTitle","thumbnail","description","extract","showReadMorePages","pages","sectionContainerId","pageContainerId","titlesShownHandler","shownTitles","sectionContainer","pageContainer","page","normalized","pageFragment","readMorePage","outerAnchorContainer","backgroundImage","innerDivContainer","encodeURI","titleToShow","descriptionEl","documentFragmentForReadMorePage","fetchAndAdd","count","baseURL","xhr","XMLHttpRequest","open","readMoreQueryURL","onload","JSON","parse","responseText","rand","floor","random","send","hasFragmentPrefix","fragmentPrefix","decodedHref","decodeURIComponent","decodedFragment","relativePath","isCitation","isWhitespaceTextNode","Node","hasCitationLink","hash","getRefTextContainer","refTextContainerID","collectRefText","refTextContainer","refTextSpan","closestReferenceClassElement","sourceNode","ReferenceItem","text","ReferenceLinkItem","NearbyReferences","selectedIndex","referencesGroup","adjacentNonWhitespaceNode","siblingGetter","currentNode","collectAdjacentReferenceNodes","nodeCollector","prevSiblingGetter","nextSiblingGetter","collectNearbyReferenceNodes","collectedNodes","unshift","collectNearbyReferenceForReferenceElement","referenceElement","referenceNodes","referenceItemForNode","collectNearbyReferences","sourceNodeParent","collectNearbyReferencesAsText","referenceLinkItemForNode","collectReferencesForBackLink","target","backLinkHrefs","backLinksJSON","getBackLinks","referenceId","referenceText","backLinks","firstBackLinkHref","isBackLink","BACK_LINK_ANCHOR","BACK_LINK_CONTAINER","BODY","BODY_HEADER","BODY_CONTENT","REF","BACK_LINK_FRAGMENT_PREFIX","BACK_LINK_ATTRIBUTE","setPercentage","textSize","setMargins","bodyElement","values","marginTop","marginRight","marginBottom","marginLeft","setPadding","paddingTop","paddingRight","paddingBottom","paddingLeft","dimImages","enable","areImagesDimmed","dim","isDim","EVENT_TYPES","CollapseTable","loadDistanceMultiplier","_loadDistanceMultiplier","_placeholders","_registered","_throttledLoadPlaceholders","wrap","_loadPlaceholders","LazyLoadTransform","placeholders","concat","_register","eventType","_isPlaceholderEligibleToLoad","deregister","_isPlaceholderWithinLoadDistance","bounds","range","innerHeight","AdjustTextSize","BodySpacingTransform","CompatibilityTransform","DimImagesTransform","EditTransform","LeadIntroductionTransform","FooterContainer","FooterLegal","FooterMenu","FooterReadMore","LazyLoadTransformer","PlatformTransform","RedLinks","ReferenceCollection","ThemeTransform","WidenImage","COMPATIBILITY","FILTER","enableSupport","properties","cssText","isStyleSupported","isFilterSupported","isParagraphEligible","paragraphElement","coordElement","coordTextLength","extractLeadIntroductionNodes","eligibleParagraph","introNodes","getEligibleParagraph","moveLeadIntroductionUp","afterElement","insertBeforeThisElement","firstChild","configureRedLinkTemplate","redLinkAnchorsInDocument","newRedLinkTemplate","replaceAnchorWithSpan","hideRedLinks","spanTemplate","redLink","ancestorsToWiden","widenThese","updateStyleValue","updateExistingStyleValue","styleWideningKeysAndValues","maxWidth","float","widenElementByUpdatingExistingStyles","keys","widenAncestors","widenImage","widenElementByUpdatingStyles"],"mappings":"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","file":"wikimedia-page-library-transform.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pcs\"] = factory();\n\telse\n\t\troot[\"pcs\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","/**\n * Polyfill function that tells whether a given element matches a selector.\n * @param {!Element} el Element\n * @param {!string} selector Selector to look for\n * @return {!boolean} Whether the element matches the selector\n */\nconst matchesSelector = (el, selector) => {\n  if (el.matches) {\n    return el.matches(selector)\n  }\n  if (el.matchesSelector) {\n    return el.matchesSelector(selector)\n  }\n  if (el.webkitMatchesSelector) {\n    return el.webkitMatchesSelector(selector)\n  }\n  return false\n}\n\n/**\n * @param {!Element} element\n * @param {!string} selector\n * @return {!Array.<Element>}\n */\nconst querySelectorAll = (element, selector) =>\n  Array.prototype.slice.call(element.querySelectorAll(selector))\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\n// Required by Android API 16 AOSP Nexus S emulator.\n// eslint-disable-next-line no-undef\nconst CustomEvent = typeof window !== 'undefined' && window.CustomEvent\n  || function(type, parameters = { bubbles: false, cancelable: false, detail: undefined }) {\n    // eslint-disable-next-line no-undef\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(type, parameters.bubbles, parameters.cancelable, parameters.detail)\n    return event\n  }\n\nexport default {\n  matchesSelector,\n  querySelectorAll,\n  CustomEvent\n}","import Polyfill from './Polyfill'\n\n// todo: drop ancestor consideration and move to Polyfill.closest().\n/**\n * Returns closest ancestor of element which matches selector.\n * Similar to 'closest' methods as seen here:\n *  https://api.jquery.com/closest/\n *  https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n * @param  {!Element} el        Element\n * @param  {!string} selector   Selector to look for in ancestors of 'el'\n * @return {?HTMLElement}       Closest ancestor of 'el' matching 'selector'\n */\nconst findClosestAncestor = (el, selector) => {\n  let parentElement\n  for (parentElement = el.parentElement;\n    parentElement && !Polyfill.matchesSelector(parentElement, selector);\n    parentElement = parentElement.parentElement) {\n    // Intentionally empty.\n  }\n  return parentElement\n}\n\n/**\n * @param {?Element} element\n * @param {!string} property\n * @param {?string} value\n * @return {?Element} The inclusive first element with an inline style (and optional value) or\n * undefined.\n */\nconst closestInlineStyle = (element, property, value) => {\n  for (let el = element; el; el = el.parentElement) {\n    let thisValue\n\n    // Wrap in a try-catch block to avoid Domino crashing on a malformed style declaration.\n    // T229521\n    try {\n      thisValue = el.style[property]\n    } catch (e) {\n      continue\n    }\n\n    if (thisValue) {\n      if (value === undefined) {\n        return el\n      }\n      if (value === thisValue) {\n        return el\n      }\n    }\n  }\n  return undefined\n}\n\n/**\n * Determines if element has a table ancestor.\n * @param  {!Element}  el   Element\n * @return {!boolean}       Whether table ancestor of 'el' is found\n */\nconst isNestedInTable = el => Boolean(findClosestAncestor(el, 'table'))\n\n/**\n * @param {!HTMLElement} element\n * @return {!boolean} true if element affects layout, false otherwise.\n */\nconst isVisible = element =>\n  // https://github.com/jquery/jquery/blob/305f193/src/css/hiddenVisibleSelectors.js#L12\n  Boolean(element.offsetWidth || element.offsetHeight || element.getClientRects().length)\n\n/**\n * Copy existing attributes from source to destination as data-* attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyAttributesToDataAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(attribute))\n    .forEach(attribute =>\n      destination.setAttribute(`data-${attribute}`, source.getAttribute(attribute)))\n}\n\n/**\n * Copy existing data-* attributes from source to destination as attributes.\n * @param {!HTMLElement} source\n * @param {!HTMLElement} destination\n * @param {!Array.<string>} attributes\n * @return {void}\n */\nconst copyDataAttributesToAttributes = (source, destination, attributes) => {\n  attributes.filter(attribute => source.hasAttribute(`data-${attribute}`))\n    .forEach(attribute =>\n      destination.setAttribute(attribute, source.getAttribute(`data-${attribute}`)))\n}\n\nexport default {\n  findClosestAncestor,\n  isNestedInTable,\n  closestInlineStyle,\n  isVisible,\n  copyAttributesToDataAttributes,\n  copyDataAttributesToAttributes\n}","import './CollapseTable.css'\nimport ElementUtilities from './ElementUtilities'\nimport NodeUtilities from './NodeUtilities'\nimport Polyfill from './Polyfill'\nimport SectionUtilities from './SectionUtilities'\n\nconst NODE_TYPE = NodeUtilities.NODE_TYPE\n\nconst SECTION_TOGGLED_EVENT_TYPE = 'section-toggled'\nconst BREAKING_SPACE = ' '\nconst CLASS = {\n  ICON: 'pcs-collapse-table-icon',\n  CONTAINER: 'pcs-collapse-table-container',\n  COLLAPSED_CONTAINER: 'pcs-collapse-table-collapsed-container',\n  COLLAPSED: 'pcs-collapse-table-collapsed',\n  COLLAPSED_BOTTOM: 'pcs-collapse-table-collapsed-bottom',\n  COLLAPSE_TEXT: 'pcs-collapse-table-collapse-text',\n  EXPANDED: 'pcs-collapse-table-expanded',\n  TABLE_INFOBOX: 'pcs-table-infobox',\n  TABLE_OTHER: 'pcs-table-other',\n  TABLE: 'pcs-collapse-table'\n}\n\n/**\n * Determine if we want to extract text from this header.\n * @param {!Element} header\n * @return {!boolean}\n */\nconst isHeaderEligible =\n  header => Polyfill.querySelectorAll(header, 'a').length < 3\n\n/**\n * Determine eligibility of extracted text.\n * @param {?string} headerText\n * @return {!boolean}\n */\nconst isHeaderTextEligible = headerText =>\n  headerText && headerText.replace(/[\\s0-9]/g, '').length > 0\n\n/**\n * Extracts first word from string. Returns null if for any reason it is unable to do so.\n * @param  {!string} string\n * @return {?string}\n */\nconst firstWordFromString = string => {\n  // 'If the global flag (g) is not set, Element zero of the array contains the entire match,\n  // while elements 1 through n contain any submatches.'\n  const matches = string.match(/\\w+/) // Only need first match so not using 'g' option.\n  if (!matches) {\n    return undefined\n  }\n  return matches[0]\n}\n\n/**\n * Is node's textContent too similar to pageTitle. Checks if the first word of the node's\n * textContent is found at the beginning of pageTitle.\n * @param  {!Node} node\n * @param  {!string} pageTitle\n * @return {!boolean}\n */\nconst isNodeTextContentSimilarToPageTitle = (node, pageTitle) => {\n  const firstPageTitleWord = firstWordFromString(pageTitle)\n  const firstNodeTextContentWord = firstWordFromString(node.textContent)\n  // Don't claim similarity if 1st words were not extracted.\n  if (!firstPageTitleWord || !firstNodeTextContentWord) {\n    return false\n  }\n  return firstPageTitleWord.toLowerCase() === firstNodeTextContentWord.toLowerCase()\n}\n\n/**\n * Removes leading and trailing whitespace and normalizes other whitespace - i.e. ensures\n * non-breaking spaces, tabs, etc are replaced with regular breaking spaces.\n * @param  {!string} string\n * @return {!string}\n */\nconst stringWithNormalizedWhitespace = string => string.trim().replace(/\\s/g, BREAKING_SPACE)\n\n/**\n * Determines if node is a BR.\n * @param  {!Node}  node\n * @return {!boolean}\n */\nconst isNodeBreakElement = node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node.tagName === 'BR'\n\n/**\n * Replace node with a text node bearing a single breaking space.\n * @param {!Document} document\n * @param  {!Node} node\n * @return {void}\n */\nconst replaceNodeWithBreakingSpaceTextNode = (document, node) => {\n  /* DOM sink status: safe - content transform with no user interference */\n  node.parentNode.replaceChild(document.createTextNode(BREAKING_SPACE), node)\n}\n\n/**\n * Extracts any header text determined to be eligible.\n * @param {!Document} document\n * @param {!Element} header\n * @param {?string} pageTitle\n * @return {?string}\n */\nconst extractEligibleHeaderText = (document, header, pageTitle) => {\n  if (!isHeaderEligible(header)) {\n    return null\n  }\n  // Clone header into fragment. This is done so we can remove some elements we don't want\n  // represented when \"textContent\" is used. Because we've cloned the header into a fragment, we are\n  // free to strip out anything we want without worrying about affecting the visible document.\n  const fragment = document.createDocumentFragment()\n  fragment.appendChild(header.cloneNode(true))\n  const fragmentHeader = fragment.querySelector('th')\n\n  Polyfill.querySelectorAll(\n    fragmentHeader, '.geo, .coordinates, sup.reference, ol, ul, style, script'\n  ).forEach(el => el.remove())\n\n  let cur = fragmentHeader.lastChild\n  while (cur) {\n    if (pageTitle\n      && NodeUtilities.isNodeTypeElementOrText(cur)\n      && isNodeTextContentSimilarToPageTitle(cur, pageTitle)) {\n      if (cur.previousSibling) {\n        cur = cur.previousSibling\n        cur.nextSibling.remove()\n      } else {\n        cur.remove()\n        cur = undefined\n      }\n    } else if (isNodeBreakElement(cur)) {\n      replaceNodeWithBreakingSpaceTextNode(document, cur)\n      cur = cur.previousSibling\n    } else {\n      cur = cur.previousSibling\n    }\n  }\n\n  const headerText = fragmentHeader.textContent\n  if (isHeaderTextEligible(headerText)) {\n    return stringWithNormalizedWhitespace(headerText)\n  }\n  return null\n}\n\n/**\n * Used to sort array of Elements so those containing 'scope' attribute are moved to front of\n * array. Relative order between 'scope' elements is preserved. Relative order between non 'scope'\n * elements is preserved.\n * @param  {!Element} a\n * @param  {!Element} b\n * @return {!number}\n */\nconst elementScopeComparator = (a, b) => {\n  const aHasScope = a.hasAttribute('scope')\n  const bHasScope = b.hasAttribute('scope')\n  if (aHasScope && bHasScope) {\n    return 0\n  }\n  if (aHasScope) {\n    return -1\n  }\n  if (bHasScope) {\n    return 1\n  }\n  return 0\n}\n\n/**\n * Find an array of table header (TH) contents. If there are no TH elements in\n * the table or the header's link matches pageTitle, an empty array is returned.\n * @param {!Document} document\n * @param {!Element} element\n * @param {?string} pageTitle Unencoded page title; if this title matches the\n *                            contents of the header exactly, it will be omitted.\n * @return {!Array<string>}\n */\nconst getTableHeaderTextArray = (document, element, pageTitle) => {\n  const headerTextArray = []\n  const headers = Polyfill.querySelectorAll(element, 'th')\n  headers.sort(elementScopeComparator)\n  for (let i = 0; i < headers.length; ++i) {\n    const headerText = extractEligibleHeaderText(document, headers[i], pageTitle)\n    if (headerText && headerTextArray.indexOf(headerText) === -1) {\n      headerTextArray.push(headerText)\n      // 'newCaptionFragment' only ever uses the first 2 items.\n      if (headerTextArray.length === 2) {\n        break\n      }\n    }\n  }\n  return headerTextArray\n}\n\n/**\n * @typedef {function} FooterDivClickCallback\n * @param {!HTMLElement}\n * @return {void}\n */\n\n/**\n * @param {!Element} container div\n * @param {?Element} trigger element that was clicked or tapped\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapsedForContainer = function(container, trigger, footerDivClickCallback) {\n  const header = container.children[0]\n  const table = container.children[1]\n  const footer = container.children[2]\n  const caption = header.querySelector('.app-table-collapsed-caption')\n  const collapsed = table.style.display !== 'none'\n  if (collapsed) {\n    table.style.display = 'none'\n    header.classList.remove(CLASS.COLLAPSED)\n    header.classList.remove(CLASS.ICON)\n    header.classList.add(CLASS.EXPANDED)\n    if (caption) {\n      caption.style.visibility = 'visible'\n    }\n    footer.style.display = 'none'\n    // if they clicked the bottom div, then scroll back up to the top of the table.\n    if (trigger === footer && footerDivClickCallback) {\n      footerDivClickCallback(container)\n    }\n  } else {\n    table.style.display = 'block'\n    header.classList.remove(CLASS.EXPANDED)\n    header.classList.add(CLASS.COLLAPSED)\n    header.classList.add(CLASS.ICON)\n    if (caption) {\n      caption.style.visibility = 'hidden'\n    }\n    footer.style.display = 'block'\n  }\n  return collapsed\n}\n\n/**\n * Ex: toggleCollapseClickCallback.bind(el, (container) => {\n *       window.scrollTo(0, container.offsetTop - transformer.getDecorOffset())\n *     })\n * @this HTMLElement\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {boolean} true if collapsed, false if expanded.\n */\nconst toggleCollapseClickCallback = function(footerDivClickCallback) {\n  const container = this.parentNode\n  return toggleCollapsedForContainer(container, this, footerDivClickCallback)\n}\n\n/**\n * @param {!HTMLElement} table\n * @return {!boolean} true if table should be collapsed, false otherwise.\n */\nconst shouldTableBeCollapsed = table => {\n  const classBlacklist = ['navbox', 'vertical-navbox', 'navbox-inner', 'metadata', 'mbox-small']\n  const blacklistIntersects = classBlacklist.some(clazz => table.classList.contains(clazz))\n  let isHidden\n  // Wrap in a try-catch block to avoid Domino crashing on a malformed style declaration.\n  // T229521\n  try {\n    isHidden = table.style.display === 'none'\n  } catch (e) {\n    // If Domino fails to parse styles, err on the safe side and don't transform\n    isHidden = true\n  }\n  return !isHidden && !blacklistIntersects\n}\n\n/**\n * @param {!Element} element\n * @return {!boolean} true if element is an infobox, false otherwise.\n */\nconst isInfobox = element =>\n  element.classList.contains('infobox')\n  || element.classList.contains('infobox_v3')\n\n/**\n * @param {!Document} document\n * @param {!DocumentFragment} content\n * @return {!HTMLDivElement}\n */\nconst newCollapsedHeaderDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add(CLASS.COLLAPSED_CONTAINER)\n  div.classList.add(CLASS.EXPANDED)\n  /* DOM sink status: risk? - content come from newCaptionFragment which is potentially risky */\n  div.appendChild(content)\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {?string} content HTML string.\n * @return {!HTMLDivElement}\n */\nconst newCollapsedFooterDiv = (document, content) => {\n  const div = document.createElement('div')\n  div.classList.add(CLASS.COLLAPSED_BOTTOM)\n  div.classList.add(CLASS.ICON)\n  /* DOM sink status: risk? - footer title can be overridden by the client */\n  div.innerHTML = content || ''\n  return div\n}\n\n/**\n * @param {!Document} document\n * @param {!string} title\n * @param {!string} titleClass\n * @param {!Array.<string>} headerText\n * @return {!DocumentFragment}\n */\nconst newCaptionFragment = (document, title, titleClass, headerText) => {\n  const fragment = document.createDocumentFragment()\n\n  const strong = document.createElement('strong')\n  /* DOM sink status: risk? - title can be overridden by clients */\n  strong.innerHTML = title\n  strong.classList.add(titleClass)\n  fragment.appendChild(strong)\n\n  const span = document.createElement('span')\n  span.classList.add(CLASS.COLLAPSE_TEXT)\n  if (headerText.length > 0) {\n    /* DOM sink status: safe - content from parsoid output */\n    span.appendChild(document.createTextNode(`: ${headerText[0]}`))\n  }\n  if (headerText.length > 1) {\n    /* DOM sink status: safe - content from parsoid output */\n    span.appendChild(document.createTextNode(`, ${headerText[1]}`))\n  }\n  if (headerText.length > 0) {\n  /* DOM sink status: safe - content transform with no user interference */\n    span.appendChild(document.createTextNode(' …'))\n  }\n  /* DOM sink status: safe - content from parsoid output */\n  fragment.appendChild(span)\n\n  return fragment\n}\n\n/**\n * @param {!Node} nodeToReplace\n * @param {!Node} replacementNode\n * @return {void}\n */\nconst replaceNodeInSection = (nodeToReplace, replacementNode) => {\n  if (!nodeToReplace || !replacementNode) {\n    return\n  }\n  let childOfSectionTag = nodeToReplace\n  let sectionTag = nodeToReplace.parentNode\n  if (!sectionTag) {\n    return\n  }\n  let foundSectionTag = false\n  while (sectionTag) {\n    if (SectionUtilities.isMediaWikiSectionElement(sectionTag)) {\n      foundSectionTag = true\n      break\n    }\n    childOfSectionTag = sectionTag\n    sectionTag = sectionTag.parentNode\n  }\n  if (!foundSectionTag) {\n    childOfSectionTag = nodeToReplace\n    sectionTag = nodeToReplace.parentNode\n  }\n  sectionTag.insertBefore(replacementNode, childOfSectionTag)\n  sectionTag.removeChild(childOfSectionTag)\n}\n\n/**\n * @param {!DOMElement} table\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?string} tableTitle title for the table\n * @param {?string} tableClass css class\n * @param {!Array<string>} headerTextArray array of header text strings\n * @param {?string} footerTitle\n * @return {void}\n */\nconst prepareTable = (table, document, pageTitle, tableTitle,\n  tableClass, headerTextArray, footerTitle) => {\n\n  const captionFragment =\n    newCaptionFragment(\n      document,\n      tableTitle,\n      tableClass,\n      headerTextArray)\n\n  // create the container div that will contain both the original table\n  // and the collapsed version.\n  const containerDiv = document.createElement('div')\n  containerDiv.className = CLASS.CONTAINER\n  replaceNodeInSection(table, containerDiv)\n\n  // ensure the table doesn't float\n  table.classList.add(CLASS.TABLE)\n\n  const collapsedHeaderDiv = newCollapsedHeaderDiv(document, captionFragment)\n  collapsedHeaderDiv.style.display = 'block'\n\n  const collapsedFooterDiv = newCollapsedFooterDiv(document, footerTitle)\n  collapsedFooterDiv.style.display = 'none'\n\n  // add our stuff to the container\n  /* DOM sink status: risk? - collapsedHeaderDiv is potentially risk */\n  containerDiv.appendChild(collapsedHeaderDiv)\n  /* DOM sink status: safe - content from parsoid output */\n  containerDiv.appendChild(table)\n  /* DOM sink status: risk? - collapsedFooterDiv is potentially risk */\n  containerDiv.appendChild(collapsedFooterDiv)\n\n  // set initial visibility\n  table.style.display = 'none'\n}\n/**\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @return {void}\n */\nconst prepareTables = (document, pageTitle, infoboxTitle, otherTitle, footerTitle) => {\n  const tables = document.querySelectorAll('table, .infobox_v3')\n  for (let i = 0; i < tables.length; ++i) {\n    const table = tables[i]\n    if (ElementUtilities.findClosestAncestor(table, `.${CLASS.CONTAINER}`)\n      || !shouldTableBeCollapsed(table)) {\n      continue\n    }\n    const isBox = isInfobox(table)\n    const headerTextArray = getTableHeaderTextArray(document, table, pageTitle)\n    if (!headerTextArray.length && !isBox) {\n      continue\n    }\n    const title = isBox ? infoboxTitle : otherTitle\n    const cls = isBox ? CLASS.TABLE_INFOBOX : CLASS.TABLE_OTHER\n    prepareTable(table, document, pageTitle, title, cls, headerTextArray, footerTitle)\n  }\n}\n\n/**\n * @param {!Element} container root element to search from\n * @return {void}\n */\nconst toggleCollapsedForAll = container => {\n  const containerDivs = Polyfill.querySelectorAll(container, `.${CLASS.CONTAINER}`)\n  containerDivs.forEach(containerDiv => {\n    toggleCollapsedForContainer(containerDiv)\n  })\n}\n\n/**\n * @param {!Window} window\n * @param {!Element} container root element to search from\n * @param {?boolean} isInitiallyCollapsed\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst setupEventHandling = (window, container, isInitiallyCollapsed, footerDivClickCallback) => {\n  /**\n   * @param {boolean} collapsed\n   * @return {boolean}\n   */\n  const dispatchSectionToggledEvent = collapsed =>\n    window.dispatchEvent(new Polyfill.CustomEvent(SECTION_TOGGLED_EVENT_TYPE, { collapsed }))\n\n  // assign click handler to the collapsed divs\n  const collapsedHeaderDivs = Polyfill.querySelectorAll(container, `.${CLASS.COLLAPSED_CONTAINER}`)\n  collapsedHeaderDivs.forEach(collapsedHeaderDiv => {\n    collapsedHeaderDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedHeaderDiv)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n  })\n\n  const collapsedFooterDivs = Polyfill.querySelectorAll(container, `.${CLASS.COLLAPSED_BOTTOM}`)\n  collapsedFooterDivs.forEach(collapsedFooterDiv => {\n    collapsedFooterDiv.onclick = () => {\n      const collapsed = toggleCollapseClickCallback.bind(collapsedFooterDiv,\n        footerDivClickCallback)()\n      dispatchSectionToggledEvent(collapsed)\n    }\n  })\n\n  if (!isInitiallyCollapsed) {\n    toggleCollapsedForAll(container)\n  }\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?boolean} isInitiallyCollapsed\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst adjustTables = (window, document, pageTitle, isMainPage, isInitiallyCollapsed,\n  infoboxTitle, otherTitle, footerTitle, footerDivClickCallback) => {\n  if (isMainPage) { return }\n\n  prepareTables(document, pageTitle, infoboxTitle, otherTitle, footerTitle)\n  setupEventHandling(window, document, isInitiallyCollapsed, footerDivClickCallback)\n}\n\n/**\n * @param {!Window} window\n * @param {!Document} document\n * @param {?string} pageTitle use title for this not `display title` (which can contain tags)\n * @param {?boolean} isMainPage\n * @param {?string} infoboxTitle\n * @param {?string} otherTitle\n * @param {?string} footerTitle\n * @param {?FooterDivClickCallback} footerDivClickCallback\n * @return {void}\n */\nconst collapseTables = (window, document, pageTitle, isMainPage, infoboxTitle, otherTitle,\n  footerTitle, footerDivClickCallback) => {\n  adjustTables(window, document, pageTitle, isMainPage, true, infoboxTitle, otherTitle,\n    footerTitle, footerDivClickCallback)\n}\n\n/**\n * If you tap a reference targeting an anchor within a collapsed table, this\n * method will expand the references section. The client can then scroll to the\n * references section.\n *\n * The first reference (an \"[A]\") in the \"enwiki > Airplane\" article from ~June\n * 2016 exhibits this issue. (You can copy wikitext from this revision into a\n * test wiki page for testing.)\n * @param  {?Element} element\n * @return {void}\n*/\nconst expandCollapsedTableIfItContainsElement = element => {\n  if (element) {\n    const containerSelector = `[class*=\"${CLASS.CONTAINER}\"]`\n    const container = ElementUtilities.findClosestAncestor(element, containerSelector)\n    if (container) {\n      const collapsedDiv = container.firstElementChild\n      if (collapsedDiv && collapsedDiv.classList.contains(CLASS.EXPANDED)) {\n        collapsedDiv.click()\n      }\n    }\n  }\n}\n\nexport default {\n  CLASS,\n  SECTION_TOGGLED_EVENT_TYPE,\n  toggleCollapsedForAll,\n  toggleCollapseClickCallback,\n  collapseTables,\n  getTableHeaderTextArray,\n  adjustTables,\n  prepareTables,\n  prepareTable,\n  setupEventHandling,\n  expandCollapsedTableIfItContainsElement,\n  test: {\n    elementScopeComparator,\n    extractEligibleHeaderText,\n    firstWordFromString,\n    shouldTableBeCollapsed,\n    isHeaderEligible,\n    isHeaderTextEligible,\n    isInfobox,\n    newCollapsedHeaderDiv,\n    newCollapsedFooterDiv,\n    newCaptionFragment,\n    isNodeTextContentSimilarToPageTitle,\n    stringWithNormalizedWhitespace,\n    replaceNodeWithBreakingSpaceTextNode,\n    getTableHeaderTextArray\n  }\n}","const Polyfill = require('./Polyfill').default\n/**\n * get Section Offsets object to handle quick scrolling in the table of contents\n * @param  {!HTMLBodyElement} body HTML body element DOM object.\n * @return {!object} section offsets object\n */\nconst getSectionOffsets = (body: HTMLBodyElement): object => {\n    const sections = Polyfill.querySelectorAll(body, 'section')\n    return {\n        sections: sections.reduce((results: Array<object>, section: HTMLElement) => {\n            const id = section.getAttribute('data-mw-section-id');\n            const heading = section &&\n                section.firstElementChild &&\n                section.firstElementChild.querySelector('.pcs-edit-section-title');\n            if (id && parseInt(id) >= 1) {\n                results.push({\n                    heading: heading && heading.innerHTML,\n                    id: parseInt(id),\n                    yOffset: section.offsetTop,\n                });\n            }\n            return results;\n        }, [])\n    }\n}\n\n/**\n * Get section of a given element\n * @param  {!Element} element\n * @return {!Element} section\n */\nconst getSectionOfElement = (element: Element): Element | null => {\n    let current: Element | null = element\n    while (current) {\n        if (isMediaWikiSectionElement(current)) {\n            return current\n        }\n        current = current.parentElement\n    }\n    return null\n}\n\n/**\n * Get section id of a given element\n * @param  {!Element} element\n * @return {!Element} section\n */\nconst getSectionIDOfElement = (element: Element): string | null => {\n    let section = getSectionOfElement(element)\n    return section && section.getAttribute('data-mw-section-id')\n}\n\n/**\n * Get lead paragraph text\n * @param  {!Document} document object.\n * @return {!string} lead paragraph text\n */\nconst getLeadParagraphText = (document: Document): string => {\n    let firstParagraphInASection = <HTMLElement>document.querySelector('#content-block-0>p');\n    return firstParagraphInASection && firstParagraphInASection.innerText || '';\n}\n\n\n/**\n * @param {!Element} element - element to test\n * @return {boolean} true if this is a element that represents a MediaWiki section\n */\nconst isMediaWikiSectionElement = (element: Element): boolean => {\n    if (!element) {\n        return false\n    }\n    // mobile-html output has `data-mw-section-id` attributes on section tags\n    if (element.tagName === 'SECTION' && element.getAttribute('data-mw-section-id')) {\n        return true\n    }\n    return false\n}\n\nconst CLASS = {\n    CONTROL: {\n        BASE: 'pcs-section-control',\n        SHOW: 'pcs-section-control-show',\n        HIDE: 'pcs-section-control-hide'\n    },\n    SECTION: {\n        HIDE: 'pcs-section-hidden'\n    },\n    HEADER: {\n        HIDEABLE: 'pcs-section-hideable-header'\n    }\n}\n\nconst ID = {\n    PREFIX: {\n        CONTENT: 'pcs-section-content-',\n        CONTROL: 'pcs-section-control-'\n    }\n}\n\nconst getControlIdForSectionId = (sectionId: string): string => {\n    return ID.PREFIX.CONTROL + sectionId\n}\n\nconst getContentIdForSectionId = (sectionId: string): string => {\n    return ID.PREFIX.CONTENT + sectionId\n}\n/**\n * @param {!Document} document - document for the control\n * @param {!string} sectionId - sectionId for the control\n * @return {Element} the control element\n */\nconst getControl = (document: Document, sectionId: string): Element => {\n    const control: Element = document.createElement('span')\n    control.id = getControlIdForSectionId(sectionId)\n    control.classList.add(CLASS.CONTROL.BASE)\n    control.classList.add(CLASS.CONTROL.SHOW)\n    return control\n}\n\nconst prepareForHiding = (document: Document, sectionId: string, section: Element, header: Element) => {\n    const control: Element = getControl(document, sectionId)\n    if (header && control) {\n        header.appendChild(control)\n        header.classList.add(CLASS.HEADER.HIDEABLE)\n        header.setAttribute('onclick', `pcs.c1.Sections.setHidden('${sectionId}', false);`)\n    }\n    let el = section.firstElementChild\n    const div = document.createElement('div')\n    while (el) {\n        const toRemove = el\n        el = el.nextElementSibling\n        if (toRemove === header) {\n            continue;\n        }\n        section.removeChild(toRemove)\n        div.appendChild(toRemove)\n    }\n    div.id = getContentIdForSectionId(sectionId)\n    div.classList.add(CLASS.SECTION.HIDE)\n    section.appendChild(div)\n}\n\nconst setHidden = (document: Document, sectionId: string, hidden: boolean = true) => {\n    const controlId: string = getControlIdForSectionId(sectionId)\n    const contentId: string = getContentIdForSectionId(sectionId)\n    const control = document.getElementById(controlId)\n    const content = document.getElementById(contentId)\n    if (!control || !content) {\n        return\n    }\n    if (hidden) {\n        control.classList.remove(CLASS.CONTROL.HIDE)\n        control.classList.add(CLASS.CONTROL.SHOW)\n        content.classList.add(CLASS.SECTION.HIDE)\n    } else {\n        control.classList.remove(CLASS.CONTROL.SHOW)\n        control.classList.add(CLASS.CONTROL.HIDE)\n        content.classList.remove(CLASS.SECTION.HIDE)\n    }\n    const header = control.parentElement\n    if (!header) {\n        return\n    }\n    header.setAttribute('onclick', `pcs.c1.Sections.setHidden('${sectionId}', ${!hidden});`)\n}\n\nconst getTopLevelSectionIdForElement = (element: Element): string | undefined => {\n    let parent: Element | null = element\n    while ((parent = parent.parentElement)) {\n        if (parent.tagName !== 'SECTION') {\n            continue\n        }\n        if (!parent.parentElement || parent.parentElement.id !== 'pcs') {\n            continue\n        }\n        const sectionId = parent.getAttribute('data-mw-section-id')\n        if (!sectionId) {\n            continue\n        }\n        return sectionId\n    }\n    return\n}\n\nconst expandCollapsedSectionIfItContainsElement = (document: Document, element: Element) => {\n    const sectionId = getTopLevelSectionIdForElement(element)\n    if (!sectionId) {\n        return\n    }\n    setHidden(document, sectionId, false)\n}\n\n// Adds a HR before the indicated section\n// Used to separate article content from collapsed sections\nconst createFoldHR = (document: Document, section: Element) => {\n    if (!section.parentElement) {\n        return\n    }\n    const hr: Element = document.createElement('hr')\n    hr.classList.add('pcs-fold-hr')\n    section.parentElement.insertBefore(hr, section);\n}\n\n\nexport default {\n    createFoldHR,\n    expandCollapsedSectionIfItContainsElement,\n    getSectionIDOfElement,\n    getLeadParagraphText,\n    getSectionOffsets,\n    prepareForHiding,\n    setHidden,\n    getControlIdForSectionId,\n    isMediaWikiSectionElement\n}","// Node is undefined in Node.js\nconst NODE_TYPE = {\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3\n}\n\n/**\n * Determines if node is either an element or text node.\n * @param  {!Node} node\n * @return {!boolean}\n */\nconst isNodeTypeElementOrText = node =>\n  node.nodeType === NODE_TYPE.ELEMENT_NODE || node.nodeType === NODE_TYPE.TEXT_NODE\n\n\n/**\n * Get node's bounding rect as a plain object.\n * @param {!Node} node\n * @return {!Object<string, number>}\n */\nconst getBoundingClientRectAsPlainObject = node => {\n  const rect = node.getBoundingClientRect()\n  return {\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    x: rect.x,\n    y: rect.y\n  }\n}\n\nexport default {\n  isNodeTypeElementOrText,\n  getBoundingClientRectAsPlainObject,\n  NODE_TYPE\n}","import './EditTransform.css'\n\nconst CLASS = {\n  SECTION_HEADER: 'pcs-edit-section-header',\n  TITLE: 'pcs-edit-section-title',\n  LINK_CONTAINER: 'pcs-edit-section-link-container',\n  LINK: 'pcs-edit-section-link',\n  PROTECTION: { UNPROTECTED: '', PROTECTED: 'page-protected', FORBIDDEN: 'no-editing' }\n}\n\nconst IDS = {\n  TITLE_DESCRIPTION: 'pcs-edit-section-title-description',\n  ADD_TITLE_DESCRIPTION: 'pcs-edit-section-add-title-description',\n  DIVIDER: 'pcs-edit-section-divider',\n  PRONUNCIATION: 'pcs-edit-section-title-pronunciation'\n}\n\nconst DATA_ATTRIBUTE = {\n  SECTION_INDEX: 'data-id',\n  ACTION: 'data-action',\n  PRONUNCIATION_URL: 'data-pronunciation-url',\n  DESCRIPTION_SOURCE: 'data-description-source'\n}\nconst ACTION_EDIT_SECTION = 'edit_section'\nconst ACTION_TITLE_PRONUNCIATION = 'title_pronunciation'\nconst ACTION_ADD_TITLE_DESCRIPTION = 'add_title_description'\n\n/**\n * Enables edit buttons to be shown (and which ones: protected or regular).\n * @param {!HTMLDocument} document\n * @param {?boolean} isEditable true if edit buttons should be shown\n * @param {?boolean} isProtected true if the protected edit buttons should be shown\n * @return {void}\n */\nconst setEditButtons = (document, isEditable = false, isProtected = false) => {\n  const classList = document.documentElement.classList\n  if (isEditable) {\n    classList.remove(CLASS.PROTECTION.FORBIDDEN)\n  } else {\n    classList.add(CLASS.PROTECTION.FORBIDDEN)\n  }\n  if (isProtected) {\n    classList.add(CLASS.PROTECTION.PROTECTED)\n  } else {\n    classList.remove(CLASS.PROTECTION.PROTECTED)\n  }\n}\n\n/**\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @param {!string} href The href for the link\n * @return {!HTMLAnchorElement}\n */\nconst newEditSectionLink = (document, index, href = '') => {\n  const link = document.createElement('a')\n  link.href = href\n  link.setAttribute(DATA_ATTRIBUTE.SECTION_INDEX, index)\n  link.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_EDIT_SECTION)\n  link.classList.add(CLASS.LINK)\n  return link\n}\n\n/**\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @param {!HTMLElement} link The link element\n * @return {!HTMLSpanElement}\n */\nconst newEditSectionButton = (document, index, link) => {\n  const container = document.createElement('span')\n  container.classList.add(CLASS.LINK_CONTAINER)\n\n  let actualLink = link\n  if (!actualLink) {\n    actualLink = newEditSectionLink(document, index)\n  }\n  /* DOM sink status: safe - content transform with no user interference */\n  container.appendChild(actualLink)\n\n  return container\n}\n\n/**\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @return {!HTMLDivElement}\n */\nconst newEditSectionWrapper = (document, index) => {\n  const element = document.createElement('div')\n  element.className = CLASS.SECTION_HEADER\n  return element\n}\n\n/**\n * @param {!HTMLDivElement} wrapper\n * @param {!HTMLElement} header The header element.\n * @return {void}\n */\nconst appendEditSectionHeader = (wrapper, header) => {\n  header.classList.add(CLASS.TITLE)\n  /* DOM sink status: safe - content transform with no user interference */\n  wrapper.appendChild(header)\n}\n\n/**\n * As a client, you may wish to set the ID attribute.\n * @param {!Document} document\n * @param {!number} index The zero-based index of the section.\n * @param {!number} level The *one-based* header or table of contents level.\n * @param {?string} titleHTML Title of this section header.\n * @param {?boolean} showEditPencil Whether to show the \"edit\" pencil (default is true).\n * @return {!HTMLElement}\n */\nconst newEditSectionHeader = (document, index, level, titleHTML, showEditPencil = true) => {\n\n  const element = newEditSectionWrapper(document, index)\n  const title = document.createElement(`h${level}`)\n  /* DOM sink status: safe - content is created from mwapi call output */\n  title.innerHTML = titleHTML || ''\n  title.setAttribute(DATA_ATTRIBUTE.SECTION_INDEX, index)\n  appendEditSectionHeader(element, title)\n\n  if (showEditPencil) {\n    const button = newEditSectionButton(document, index)\n    element.appendChild(button)\n  }\n  return element\n}\n\n/**\n * Elements needed to show or add page title description.\n * @param {!Document} document\n * @param {?string} titleDescription Page title description.\n * @param {?string} titleDescriptionSource\n * @param {?string} addTitleDescriptionString Localized string e.g. 'Add title description'.\n * @param {?boolean} isTitleDescriptionEditable Whether title description is editable.\n * @return {?HTMLElement}\n */\nconst titleDescriptionElements = (document, titleDescription, titleDescriptionSource, addTitleDescriptionString,\n  isTitleDescriptionEditable) => {\n  const descriptionExists = titleDescription !== undefined && titleDescription.length > 0\n  if (descriptionExists) {\n    const p = document.createElement('p')\n    p.setAttribute(DATA_ATTRIBUTE.DESCRIPTION_SOURCE, titleDescriptionSource)\n    p.id = IDS.TITLE_DESCRIPTION\n    p.innerHTML = titleDescription\n    return p\n  }\n  if (isTitleDescriptionEditable) {\n    const a = document.createElement('a')\n    a.href = '#'\n    a.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_ADD_TITLE_DESCRIPTION)\n    const p = document.createElement('p')\n    p.id = IDS.ADD_TITLE_DESCRIPTION\n    p.innerHTML = addTitleDescriptionString\n    a.appendChild(p)\n    return a\n  }\n  return null\n}\n\n/**\n * Lead section header is a special case as it needs to show page title and description too,\n * and in addition to the lead edit pencil, the description can also be editable.\n * As a client, you may wish to set the ID attribute.\n * @param {!Document} document\n * @param {?string} pageDisplayTitle Page display title.\n * @param {?string} titleDescription Page title description.\n * @param {?string} titleDescriptionSource Page title description source - \"central\" or \"local\".\n * @param {?string} addTitleDescriptionString Localized string e.g. 'Add title description'.\n * @param {?boolean} isTitleDescriptionEditable Whether title description is editable.\n * @param {?boolean} showEditPencil Whether to show the \"edit\" pencil (default is true).\n * @param {?string} pronunciationURL URL for the pronunciation - will show the speaker when provided.\n * @return {!HTMLElement}\n */\nconst newEditLeadSectionHeader = (document, pageDisplayTitle, titleDescription, titleDescriptionSource,\n  addTitleDescriptionString, isTitleDescriptionEditable, showEditPencil = true,\n  pronunciationURL) => {\n\n  const container = document.createDocumentFragment()\n\n  const header = newEditSectionHeader(document, 0, 1, pageDisplayTitle, showEditPencil)\n\n  if (pronunciationURL) {\n    const a = document.createElement('a')\n    a.setAttribute(DATA_ATTRIBUTE.ACTION, ACTION_TITLE_PRONUNCIATION)\n    a.setAttribute(DATA_ATTRIBUTE.PRONUNCIATION_URL, pronunciationURL)\n    a.id = IDS.PRONUNCIATION\n    header.querySelector('h1').appendChild(a)\n  }\n\n  container.appendChild(header)\n\n  const descriptionElements = titleDescriptionElements(document, titleDescription,\n    titleDescriptionSource, addTitleDescriptionString, isTitleDescriptionEditable)\n\n  if (descriptionElements) {\n    container.appendChild(descriptionElements)\n  }\n\n  const divider = document.createElement('hr')\n  divider.id = IDS.DIVIDER\n  container.appendChild(divider)\n\n  return container\n}\n\nexport default {\n  appendEditSectionHeader,\n  CLASS,\n  IDS,\n  DATA_ATTRIBUTE,\n  setEditButtons,\n  newEditSectionButton,\n  newEditSectionHeader,\n  newEditSectionWrapper,\n  newEditLeadSectionHeader,\n  newEditSectionLink\n}","import './LazyLoadTransform.css'\n// todo: use imports when other modules are TypeScript.\nconst ElementGeometry = require('./ElementGeometry').default\nconst ElementUtilities = require('./ElementUtilities').default\nconst Polyfill = require('./Polyfill').default\n\n// CSS classes used to identify and present lazily loaded images. Placeholders are members of\n// PLACEHOLDER_CLASS and one state class: pending, loading, or error. Images are members of either\n// loading or loaded state classes. Class names should match those in LazyLoadTransform.css.\nconst PLACEHOLDER_CLASS = 'pcs-lazy-load-placeholder'\nconst PLACEHOLDER_PENDING_CLASS = 'pcs-lazy-load-placeholder-pending' // Download pending.\nconst PLACEHOLDER_LOADING_CLASS = 'pcs-lazy-load-placeholder-loading' // Download started.\nconst PLACEHOLDER_ERROR_CLASS = 'pcs-lazy-load-placeholder-error' // Download failure.\nconst IMAGE_LOADING_CLASS = 'pcs-lazy-load-image-loading' // Download started.\nconst IMAGE_LOADED_CLASS = 'pcs-lazy-load-image-loaded' // Download completed.\n\nconst CLASSES = {\n  PLACEHOLDER_CLASS,\n  PLACEHOLDER_PENDING_CLASS,\n  PLACEHOLDER_LOADING_CLASS,\n  PLACEHOLDER_ERROR_CLASS,\n  IMAGE_LOADING_CLASS,\n  IMAGE_LOADED_CLASS\n}\n\n// Attributes copied from images to placeholders via data-* attributes for later restoration. The\n// image's classes and dimensions are also set on the placeholder.\n// The 3 data-* items are used by iOS.\nconst COPY_ATTRIBUTES = ['class', 'style', 'src', 'srcset', 'width', 'height', 'alt',\n  'usemap', 'data-file-width', 'data-file-height', 'data-image-gallery'\n]\n\n// Small images, especially icons, are quickly downloaded and may appear in many places. Lazily\n// loading these images degrades the experience with little gain. Always eagerly load these images.\n// Example: flags in the medal count for the \"1896 Summer Olympics medal table.\"\n// https://en.m.wikipedia.org/wiki/1896_Summer_Olympics_medal_table?oldid=773498394#Medal_count\nconst UNIT_TO_MINIMUM_LAZY_LOAD_SIZE: {[unit in string]?: number} = {\n  px: 50, // https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/includes/MobileFormatter.php;c89f371ea9e789d7e1a827ddfec7c8028a549c12$22\n  ex: 10, // ''\n  em: 5 // 1ex ≈ .5em; https://developer.mozilla.org/en-US/docs/Web/CSS/length#Units\n}\n\n/**\n * Replace an image with a placeholder.\n * @param {!Document} document\n * @param {!HTMLImageElement} image The image to be replaced.\n * @return {!HTMLSpanElement} The placeholder replacing image.\n */\nconst convertImageToPlaceholder = (document: Document, image: HTMLImageElement): HTMLSpanElement => {\n  // There are a number of possible implementations for placeholders including:\n  //\n  // - [MobileFrontend] Replace the original image with a span and replace the span with a new\n  //   downloaded image.\n  //   This option has a good fade-in but has some CSS concerns for the placeholder, particularly\n  //   `max-width`, and causes significant reflows when used with image widening.\n  //\n  // - [Previous] Replace the original image with a span and append a new downloaded image to the\n  //   span.\n  //   This option has the best cross-fading and extensibility but makes duplicating all the CSS\n  //   rules for the appended image impractical.\n  //\n  // - [Previous] Replace the original image's source with a transparent image and update the source\n  //   from a new downloaded image.\n  //   This option has a good fade-in and minimal CSS concerns for the placeholder and image but\n  //   causes significant reflows when used with image widening.\n  //\n  // - [Current] Replace the original image with a couple spans and replace the spans with a new\n  //   downloaded image.\n  //   This option is about the same as MobileFrontend but supports image widening without reflows.\n\n  // Create the root placeholder.\n  const placeholder = document.createElement('span')\n\n  // Copy the image's classes and append the placeholder and current state (pending) classes.\n  if (image.hasAttribute('class')) {\n    placeholder.setAttribute('class', image.getAttribute('class') || '')\n  }\n  placeholder.classList.add(PLACEHOLDER_CLASS)\n  placeholder.classList.add(PLACEHOLDER_PENDING_CLASS)\n\n  // Match the image's width, if specified. If image widening is used, this width will be overridden\n  // by !important priority.\n  const geometry = ElementGeometry.from(image)\n  if (geometry.width) { placeholder.style.setProperty('width', `${geometry.width}`) }\n\n  // Save the image's attributes to data-* attributes for later restoration.\n  ElementUtilities.copyAttributesToDataAttributes(image, placeholder, COPY_ATTRIBUTES)\n\n  // Create a spacer and match the aspect ratio of the original image, if determinable. If image\n  // widening is used, this spacer will scale with the width proportionally.\n  const spacing = document.createElement('span')\n  if (geometry.width && geometry.height) {\n    // Assume units are identical.\n    const ratio = geometry.heightValue / geometry.widthValue\n    spacing.style.setProperty('padding-top', `${ratio * 100}%`)\n  }\n\n  // Append the spacer to the placeholder and replace the image with the placeholder.\n  /* DOM sink status: safe - content transform with no user interference */\n  placeholder.appendChild(spacing)\n  /* DOM sink status: safe - content from parsoid output  */\n  if (image.parentNode) image.parentNode.replaceChild(placeholder, image)\n\n  return placeholder\n}\n\n/**\n * @param {!HTMLImageElement} image The image to be considered.\n * @return {!boolean} true if image download can be deferred, false if image should be eagerly\n *                    loaded.\n */\nconst isLazyLoadable = (image: HTMLImageElement): boolean => {\n  const geometry = ElementGeometry.from(image)\n  if (!geometry.width || !geometry.height) { return true }\n  const minWidth = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.widthUnit] || Infinity\n  const minHeight = UNIT_TO_MINIMUM_LAZY_LOAD_SIZE[geometry.heightUnit] || Infinity\n  return geometry.widthValue >= minWidth && geometry.heightValue >= minHeight\n}\n\n/**\n * @param {!Element} element\n * @return {!Array.<HTMLImageElement>} Convertible images descendent from but not including element.\n */\nconst queryLazyLoadableImages = (element: Element): HTMLImageElement[] =>\n  Polyfill.querySelectorAll(element, 'img').filter((image: HTMLImageElement) => isLazyLoadable(image))\n\n/**\n * Convert images with placeholders. The transformation is inverted by calling loadImage().\n * @param {!Document} document\n * @param {!Array.<HTMLImageElement>} images The images to lazily load.\n * @return {!Array.<HTMLSpanElement>} The placeholders replacing images.\n */\nconst convertImagesToPlaceholders = (document: Document, images: HTMLImageElement[]): HTMLSpanElement[] =>\n  images.map(image => convertImageToPlaceholder(document, image))\n\n/**\n * Start downloading image resources associated with a given placeholder and replace the placeholder\n * with a new image element when the download is complete.\n * @param {!Document} document\n * @param {!HTMLSpanElement} placeholder\n * @return {!HTMLImageElement} A new image element.\n */\nconst loadPlaceholder = (document: Document, placeholder: HTMLSpanElement): HTMLImageElement => {\n  placeholder.classList.add(PLACEHOLDER_LOADING_CLASS)\n  placeholder.classList.remove(PLACEHOLDER_PENDING_CLASS)\n\n  const image = document.createElement('img')\n\n  const retryListener = (event: MouseEvent) => { // eslint-disable-line require-jsdoc\n    image.setAttribute('src', image.getAttribute('src') || '')\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  // Add the download listener prior to setting the src attribute to avoid missing the load event.\n  image.addEventListener('load', () => {\n    placeholder.removeEventListener('click', retryListener)\n    /* DOM sink status: safe - content from parsoid output */\n    if (placeholder.parentNode) placeholder.parentNode.replaceChild(image, placeholder)\n    image.classList.add(IMAGE_LOADED_CLASS)\n    image.classList.remove(IMAGE_LOADING_CLASS)\n  }, { once: true })\n\n  image.addEventListener('error', () => {\n    placeholder.classList.add(PLACEHOLDER_ERROR_CLASS)\n    placeholder.classList.remove(PLACEHOLDER_LOADING_CLASS)\n    placeholder.addEventListener('click', retryListener)\n  }, { once: true })\n\n  // Set src and other attributes, triggering a download.\n  ElementUtilities.copyDataAttributesToAttributes(placeholder, image, COPY_ATTRIBUTES)\n\n  // Append to the class list after copying over any preexisting classes.\n  image.classList.add(IMAGE_LOADING_CLASS)\n\n  return image\n}\n\nexport default {\n  CLASSES,\n  PLACEHOLDER_CLASS,\n  isLazyLoadable,\n  queryLazyLoadableImages,\n  convertImagesToPlaceholders,\n  convertImageToPlaceholder,\n  loadPlaceholder\n}","import Polyfill from './Polyfill'\n\n/**\n * Extracts array of page issues from element\n * @param {!Document} document\n * @return {!Array.<string>} Return empty array if nothing is extracted\n */\nconst collectPageIssueElements = document => {\n  if (!document) {\n    return []\n  }\n  return Polyfill.querySelectorAll(document, '.mbox-text-span').map(element => {\n    Polyfill.querySelectorAll(element, '.hide-when-compact, .collapsed').forEach(el => el.remove())\n    return element\n  })\n}\n\n/**\n * Returns section JSON for an element\n * @param {!Element} element\n * @return {!map} section info\n */\nconst sectionJSON = element => {\n  const section = element.closest('section[data-mw-section-id]')\n  const headerEl = section && section.querySelector('h1,h2,h3,h4,h5,h6')\n  return {\n    id: section && parseInt(section.getAttribute('data-mw-section-id'), 10),\n    /* DOM sink status: safe - content transform with no user interference */\n    title: headerEl && headerEl.innerHTML.trim(),\n    anchor: headerEl && headerEl.getAttribute('id')\n  }\n}\n\n/**\n * Extracts array of page issues from element\n * @param {!Document} document\n * @return {!Array.<Object>} Return empty array if nothing is extracted\n */\nconst collectPageIssues = document => collectPageIssueElements(document).map(el => ({\n  html: el.innerHTML.trim(),\n  section: sectionJSON(el)\n}))\n\n/**\n * Extracts array of hatnotes from an element\n * @param {?Element} element\n * @return {!Array.<Object>} Return empty array if nothing is extracted\n */\nconst collectHatnotes = element => {\n  if (!element) {\n    return []\n  }\n  return Polyfill.querySelectorAll(element, 'div.hatnote').map(element => {\n    const titles = Polyfill\n      .querySelectorAll(element, 'div.hatnote a[href]:not([href=\"\"]):not([redlink=\"1\"])')\n      .map(el => el.href)\n    return {\n      html: element.innerHTML.trim(),\n      links: titles,\n      section: sectionJSON(element)\n    }\n  })\n}\n\nexport default {\n  collectHatnotes,\n  collectPageIssues,\n  test: {\n    collectPageIssueElements\n  }\n}","// separate this out so it is only compiled once\nconst styleRegex = /(-?\\d*\\.?\\d*)(\\D+)?/\n\n/** CSS length value and unit of measure. */\nclass DimensionUnit {\n  /**\n   * Returns the dimension and units of an Element, usually width or height, as specified by inline\n   * style or attribute. This is a pragmatic not bulletproof implementation.\n   * @param {!Element} element\n   * @param {!string} property\n   * @return {?DimensionUnit}\n   */\n  static fromElement(element, property) {\n    return element.style.getPropertyValue(property)\n      && DimensionUnit.fromStyle(element.style.getPropertyValue(property))\n      || element.hasAttribute(property) && new DimensionUnit(element.getAttribute(property))\n      || undefined\n  }\n  /**\n   * This is a pragmatic not bulletproof implementation.\n   * @param {!string} property\n   * @return {!DimensionUnit}\n   */\n  static fromStyle(property) {\n    const matches = property.match(styleRegex) || []\n    return new DimensionUnit(matches[1], matches[2])\n  }\n\n  /**\n   * @param {!string} value\n   * @param {?string} unit Defaults to pixels.\n   */\n  constructor(value, unit) {\n    this._value = Number(value)\n    this._unit = unit || 'px'\n  }\n\n  /** @return {!number} NaN if unknown. */\n  get value() { return this._value }\n\n  /** @return {!string} */\n  get unit() { return this._unit }\n\n  /** @return {!string} */\n  toString() {\n    return isNaN(this.value) ? '' : `${this.value}${this.unit}`\n  }\n}\n\n/** Element width and height dimensions and units. */\nexport default class ElementGeometry {\n  /**\n   * @param {!Element} element\n   * @return {!ElementGeometry}\n   */\n  static from(element) {\n    return new ElementGeometry(DimensionUnit.fromElement(element, 'width'),\n      DimensionUnit.fromElement(element, 'height'))\n  }\n\n  /**\n   * @param {?DimensionUnit} width\n   * @param {?DimensionUnit} height\n   */\n  constructor(width, height) {\n    this._width = width\n    this._height = height\n  }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get width() { return this._width }\n\n  /** @return {!number} NaN if unknown. */\n  get widthValue() { return this._width && !isNaN(this._width.value) ? this._width.value : NaN }\n\n  /** @return {!string} */\n  get widthUnit() { return this._width && this._width.unit || 'px' }\n\n  /**\n   * @return {?DimensionUnit}\n   */\n  get height() { return this._height }\n\n  /** @return {!number} NaN if unknown. */\n  get heightValue() { return this._height && !isNaN(this._height.value) ? this._height.value : NaN }\n\n  /** @return {!string} */\n  get heightUnit() { return this._height && this._height.unit || 'px' }\n}","/** Function rate limiter. */\nexport default class Throttle {\n  /**\n   * The function to invoke when not throttled.\n   *\n   * @callback NotThrottledFunction\n   */\n\n  /**\n   * A function wrapped in a Throttle.\n   *\n   * @callback WrappedFunction\n   */\n\n  /**\n   * Wraps a function in a Throttle.\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   * @return {!WrappedFunction}\n   */\n  static wrap(window, period, funktion) {\n    const throttle = new Throttle(window, period, funktion)\n    const throttled = function Throttled() { return throttle.queue(this, arguments) }\n    throttled.result = () => throttle.result\n    throttled.pending = () => throttle.pending()\n    throttled.delay = () => throttle.delay()\n    throttled.cancel = () => throttle.cancel()\n    throttled.reset = () => throttle.reset()\n    return throttled\n  }\n\n  /**\n   * @param {!Window} window\n   * @param {!number} period The nonnegative minimum number of milliseconds between function\n   *                         invocations.\n   * @param {!NotThrottledFunction} funktion\n   */\n  constructor(window, period, funktion) {\n    this._window = window\n    this._period = period\n    this._function = funktion\n\n    // The upcoming invocation's context and arguments.\n    this._context = undefined\n    this._arguments = undefined\n\n    // The previous invocation's result, timeout identifier, and last run timestamp.\n    this._result = undefined\n    this._timeout = 0\n    this._timestamp = 0\n  }\n\n  /**\n   * The return value of the initial run is always undefined. The return value of subsequent runs is\n   * always a previous result. The context and args used by a future invocation are always the most\n   * recently supplied. Invocations, even if immediately eligible, are dispatched.\n   * @param {?any} context\n   * @param {?any} args The arguments passed to the underlying function.\n   * @return {?any} The cached return value of the underlying function.\n   */\n  queue(context, args) {\n    // Always update the this and arguments to the latest supplied.\n    this._context = context\n    this._arguments = args\n\n    if (!this.pending()) {\n      // Queue a new invocation.\n      this._timeout = this._window.setTimeout(() => {\n        this._timeout = 0\n        this._timestamp = Date.now()\n        this._result = this._function.apply(this._context, this._arguments)\n      }, this.delay())\n    }\n\n    // Always return the previous result.\n    return this.result\n  }\n\n  /** @return {?any} The cached return value of the underlying function. */\n  get result() { return this._result }\n\n  /** @return {!boolean} true if an invocation is queued. */\n  pending() { return Boolean(this._timeout) }\n\n  /**\n   * @return {!number} The nonnegative number of milliseconds until an invocation is eligible to\n   *                   run.\n   */\n  delay() {\n    if (!this._timestamp) { return 0 }\n    return Math.max(0, this._period - (Date.now() - this._timestamp))\n  }\n\n  /**\n   * Clears any pending invocation but doesn't clear time last invoked or prior result.\n   * @return {void}\n   */\n  cancel() {\n    if (this._timeout) { this._window.clearTimeout(this._timeout) }\n    this._timeout = 0\n  }\n\n  /**\n   * Clears any pending invocation, time last invoked, and prior result.\n   * @return {void}\n   */\n  reset() {\n    this.cancel()\n    this._result = undefined\n    this._timestamp = 0\n  }\n}","const CLASS_PREFIX = 'pcs-platform-'\nconst CLASS = { ANDROID: `${CLASS_PREFIX}android`, IOS:  `${CLASS_PREFIX}ios` }\n\n// Regular expressions from https://phabricator.wikimedia.org/diffusion/EMFR/browse/master/resources/mobile.startup/browser.js;c89f371ea9e789d7e1a827ddfec7c8028a549c12.\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is Android, false otherwise.\n */\nconst isAndroid = window => /android/i.test(window.navigator.userAgent)\n\n/**\n * @param {!Window} window\n * @return {!boolean} true if the user agent is iOS, false otherwise.\n */\nconst isIOs = window => /ipad|iphone|ipod/i.test(window.navigator.userAgent)\n\n/**\n * @param {!HTMLDocument} document\n * @param {!string} platform one of the values in CLASS\n * @return {void}\n */\nconst setPlatform = (document, platform) => {\n  document.documentElement.classList.add(platform)\n}\n\n/**\n * @param {!Window} window\n * @return {void}\n */\nconst classify = window => {\n  const html = window.document.documentElement\n  if (isAndroid(window)) { html.classList.add(CLASS.ANDROID) }\n  if (isIOs(window)) { html.classList.add(CLASS.IOS) }\n}\n\nexport default {\n  CLASS,\n  CLASS_PREFIX,\n  classify,\n  setPlatform\n}","import './ThemeTransform.css'\n\nconst CLASS_PREFIX = 'pcs-theme-'\n// Theme to CSS classes.\nconst THEME = {\n  DEFAULT: `${CLASS_PREFIX}default`,\n  DARK: `${CLASS_PREFIX}dark`,\n  SEPIA: `${CLASS_PREFIX}sepia`,\n  BLACK: `${CLASS_PREFIX}black`\n}\n\n\n/**\n * @param {?Element} el element\n * @param {!string} theme\n * @return {void}\n */\nconst setThemeOnElement = (el, theme) => {\n  if (!el) {\n    return\n  }\n  // Set the new theme.\n  el.classList.add(theme)\n\n  // Clear any previous theme.\n  for (const key in THEME) {\n    if (Object.prototype.hasOwnProperty.call(THEME, key) && THEME[key] !== theme) {\n      el.classList.remove(THEME[key])\n    }\n  }\n}\n\n/**\n * @param {!Document} document\n * @param {!string} theme\n * @return {void}\n */\nconst setTheme = (document, theme) => {\n  const body = document.body\n  setThemeOnElement(body, theme)\n  // the pcs element is necessary to allow\n  // template editors to theme templates by\n  // declaring styles for .themeclass .templateclass {\n  // TemplateStyles are scoped to .mw-parser-outpt by parsoid\n  // so without an intermediate div with the theme class,\n  // the styles aren't applied\n  const pcs = document.getElementById('pcs')\n  setThemeOnElement(pcs, theme)\n}\n\nexport default {\n  THEME,\n  CLASS_PREFIX,\n  setTheme\n}","import './FooterContainer.css'\n\n/**\n * Returns a fragment containing structural footer html which may be inserted where needed.\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst containerFragment = document => {\n  const containerFragment = document.createDocumentFragment()\n  const menuSection = document.createElement('section')\n  menuSection.id = 'pcs-footer-container-menu'\n  menuSection.className = 'pcs-footer-section'\n  menuSection.innerHTML =\n  `<h2 id='pcs-footer-container-menu-heading'></h2>\n   <div id='pcs-footer-container-menu-items'></div>`\n  /* DOM sink status: risk? */\n  containerFragment.appendChild(menuSection)\n  const readMoreSection = document.createElement('section')\n  readMoreSection.id = 'pcs-footer-container-readmore'\n  readMoreSection.className = 'pcs-footer-section'\n  readMoreSection.style.display = 'none'\n  readMoreSection.innerHTML =\n  `<h2 id='pcs-footer-container-readmore-heading'></h2>\n   <div id='pcs-footer-container-readmore-pages'></div>`\n  /* DOM sink status: risk? */\n  containerFragment.appendChild(readMoreSection)\n  const legalSection = document.createElement('section')\n  legalSection.id = 'pcs-footer-container-legal'\n  /* DOM sink status: risk? */\n  containerFragment.appendChild(legalSection)\n  return containerFragment\n}\n\n/**\n * Indicates whether container is has already been added.\n * @param {!Document} document\n * @return {boolean}\n */\nconst isContainerAttached = document => Boolean(document.querySelector('#pcs-footer-container'))\n\nexport default {\n  containerFragment,\n  isContainerAttached // todo: rename isAttached()?\n}","import './FooterLegal.css'\n\n/**\n * @typedef {function} FooterLegalClickCallback\n * @return {void}\n */\n\n/**\n  * @typedef {function} FooterBrowserClickCallback\n  * @return {void}\n  */\n\n/**\n * @param {!string} licenseString\n * @param {?string} linkText\n * @return {!string}\n */\nconst buildLicenseHtml = (licenseString, linkText) => {\n  const halves = licenseString.split('$1')\n  return `${halves[0]}<a class='pcs-footer-legal-license-link'>${linkText}</a>${halves[1]}`\n}\n\n/**\n * Adds legal footer html to 'containerID' element.\n * @param {!Element} content\n * @param {?string} licenseString\n * @param {?string} licenseSubstitutionString\n * @param {!string} containerID\n * @param {!FooterLegalClickCallback} licenseLinkClickHandler\n * @param {!string} viewInBrowserString\n * @param {!FooterBrowserClickCallback} browserLinkClickHandler\n * @return {void}\n */\nconst add = (content, licenseString, licenseSubstitutionString, containerID,\n  licenseLinkClickHandler, viewInBrowserString, browserLinkClickHandler) => {\n\n  // todo: don't manipulate the selector. The client can make this an ID if they want it to be.\n  const container = content.querySelector(`#${containerID}`)\n\n  /* DOM sink status: risk? - content can be changed by clients */\n  container.innerHTML =\n  `<div class='pcs-footer-legal-contents'>\n    <hr class='pcs-footer-legal-divider'>\n    <span class='pcs-footer-legal-license'>\n    ${buildLicenseHtml(licenseString, licenseSubstitutionString)}\n    <br>\n      <div class=\"pcs-footer-browser\">\n        <a class='pcs-footer-browser-link'>\n          ${viewInBrowserString}\n        </a>\n      </div>\n    </span>\n  </div>`\n\n  container.querySelector('.pcs-footer-legal-license-link')\n    .addEventListener('click', () => {\n      licenseLinkClickHandler()\n    })\n\n  container.querySelector('.pcs-footer-browser-link')\n    .addEventListener('click', () => {\n      browserLinkClickHandler()\n    })\n}\n\nexport default {\n  add\n}","import './FooterMenu.css'\nimport CollectionUtilities from './CollectionUtilities'\n\n/**\n * @typedef {function} FooterMenuItemClickCallback\n * @param {!Array.<string>} payload Important - should return empty array if no payload strings.\n * @return {void}\n */\n\n/**\n * @typedef {string} MenuItemType\n */\n\n/**\n * Type representing kinds of menu items.\n * IMPORTANT: Don't change these values without considering it a breaking change.\n * Existing clients rely on using the string values so that they are serializable.\n * @enum {MenuItemType}\n */\nconst MenuItemType = {\n  languages: 'languages',\n  lastEdited: 'lastEdited',\n  pageIssues: 'pageIssues',\n  disambiguation: 'disambiguation',\n  coordinate: 'coordinate',\n  talkPage: 'talkPage'\n}\n\n/**\n * Menu item model.\n */\nclass MenuItem {\n  /**\n   * MenuItem constructor.\n   * @param {!string} title\n   * @param {?string} subtitle\n   * @param {!MenuItemType} itemType\n   * @param {FooterMenuItemClickCallback} clickHandler\n   */\n  constructor(title, subtitle, itemType, clickHandler) {\n    this.title = title\n    this.subtitle = subtitle\n    this.itemType = itemType\n    this.clickHandler = clickHandler\n    this.payload = []\n  }\n\n  /**\n   * Returns icon CSS class for this menu item based on its type.\n   * @return {!string}\n   */\n  iconClass() {\n    switch (this.itemType) {\n    case MenuItemType.languages:\n      return 'pcs-footer-menu-icon-languages'\n    case MenuItemType.lastEdited:\n      return 'pcs-footer-menu-icon-last-edited'\n    case MenuItemType.talkPage:\n      return 'pcs-footer-menu-icon-talk-page'\n    case MenuItemType.pageIssues:\n      return 'pcs-footer-menu-icon-page-issues'\n    case MenuItemType.disambiguation:\n      return 'pcs-footer-menu-icon-disambiguation'\n    case MenuItemType.coordinate:\n      return 'pcs-footer-menu-icon-coordinate'\n    default:\n      return ''\n    }\n  }\n\n  /**\n   * Extracts array of page issues, disambiguation titles, etc from element.\n   * @typedef {function} PayloadExtractor\n   * @param {!Document} document\n   * @param {?Element} element\n   * @return {!Array.<string>} Return empty array if nothing is extracted\n   */\n\n  /**\n   * Returns reference to function for extracting payload when this menu item is tapped.\n   * @return {?PayloadExtractor}\n   */\n  payloadExtractor() {\n    switch (this.itemType) {\n    case MenuItemType.pageIssues:\n      return CollectionUtilities.collectPageIssues\n    case MenuItemType.disambiguation:\n      return CollectionUtilities.collectHatnotes\n    default:\n      return undefined\n    }\n  }\n}\n\n/**\n * Makes document fragment for a menu item.\n * @param {!MenuItem} menuItem\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst documentFragmentForMenuItem = (menuItem, document) => {\n  const item = document.createElement('div')\n  item.className = 'pcs-footer-menu-item'\n  item.role = 'menuitem'\n  const containerAnchor = document.createElement('a')\n  containerAnchor.addEventListener('click', () => {\n    menuItem.clickHandler(menuItem.payload)\n  })\n\n  item.appendChild(containerAnchor)\n\n  if (menuItem.title) {\n    const title = document.createElement('div')\n    title.className = 'pcs-footer-menu-item-title'\n    /* DOM sink status: risk? - headingString can be changed by clients */\n    title.innerText = menuItem.title\n    containerAnchor.title = menuItem.title\n    containerAnchor.appendChild(title)\n  }\n\n  if (menuItem.subtitle) {\n    const subtitle = document.createElement('div')\n    subtitle.className = 'pcs-footer-menu-item-subtitle'\n    /* DOM sink status: risk? - headingString can be changed by clients */\n    subtitle.innerText = menuItem.subtitle\n    containerAnchor.appendChild(subtitle)\n  }\n\n  const iconClass = menuItem.iconClass()\n  if (iconClass) {\n    item.classList.add(iconClass)\n  }\n\n  return document.createDocumentFragment().appendChild(item)\n}\n\n/**\n * Adds a MenuItem to a container.\n * @param {!MenuItem} menuItem\n * @param {!string} containerID\n * @param {!Document} document\n * @return {void}\n */\nconst addItem = (menuItem, containerID, document) => {\n  document.getElementById(containerID).appendChild(\n    documentFragmentForMenuItem(menuItem, document)\n  )\n}\n\n/**\n * Conditionally adds a MenuItem to a container.\n * @param {!string} title\n * @param {!string} subtitle\n * @param {!MenuItemType} itemType\n * @param {!string} containerID\n * @param {FooterMenuItemClickCallback} clickHandler\n * @param {!Document} document\n * @return {void}\n */\nconst maybeAddItem = (title, subtitle, itemType, containerID, clickHandler, document) => {\n  if (title === '') {\n    return\n  }\n  const item = new MenuItem(title, subtitle, itemType, clickHandler)\n\n  // Items are not added if they have a payload extractor which fails to extract anything.\n  const extractor = item.payloadExtractor()\n  if (extractor) {\n    item.payload = extractor(document)\n    if (item.payload.length === 0) {\n      return\n    }\n  }\n\n  addItem(item, containerID, document)\n}\n\n/**\n * Sets heading element string.\n * @param {!string} headingString\n * @param {!string} headingID\n * @param {!Document} document\n * @return {void}\n */\nconst setHeading = (headingString, headingID, document) => {\n  const headingElement = document.getElementById(headingID)\n  /* DOM sink status: risk? - headingString can be changed by clients */\n  headingElement.innerText = headingString\n  headingElement.title = headingString\n}\n\nexport default {\n  MenuItemType, // todo: rename to just ItemType?\n  setHeading,\n  maybeAddItem\n}","import './FooterReadMore.css'\n\n/**\n * @typedef {function} TitlesShownHandler\n * @param {!Array.<string>} titles\n * @return {void}\n */\n\n/**\n * Display fetched read more pages.\n * @typedef {function} ShowReadMorePagesHandler\n * @param {!Array.<object>} pages\n * @param {!string} heading\n * @param {!string} sectionContainerId\n * @param {!string} pageContainerId\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\n\n/**\n * Removes parenthetical enclosures from string.\n * @param {!string} string\n * @param {!string} opener\n * @param {!string} closer\n * @return {!string}\n */\nconst safelyRemoveEnclosures = (string, opener, closer) => {\n  const enclosureRegex = new RegExp(`\\\\s?[${opener}][^${opener}${closer}]+[${closer}]`, 'g')\n  let counter = 0\n  const safeMaxTries = 30\n  let stringToClean = string\n  let previousString = ''\n  do {\n    previousString = stringToClean\n    stringToClean = stringToClean.replace(enclosureRegex, '')\n    counter++\n  } while (previousString !== stringToClean && counter < safeMaxTries)\n  return stringToClean\n}\n\n/**\n * Removes '(...)' and '/.../' parenthetical enclosures from string.\n * @param {!string} string\n * @return {!string}\n */\nconst cleanExtract = string => {\n  let stringToClean = string\n  stringToClean = safelyRemoveEnclosures(stringToClean, '(', ')')\n  stringToClean = safelyRemoveEnclosures(stringToClean, '/', '/')\n  return stringToClean\n}\n\n/**\n * Read more page model.\n */\nclass ReadMorePage {\n  /**\n   * ReadMorePage constructor.\n   * @param {!string} title\n   * @param {!string} displayTitle\n   * @param {?string} thumbnail\n   * @param {?string} description\n   * @param {?string} extract\n   */\n  constructor(title, displayTitle, thumbnail, description, extract) {\n    this.title = title\n    this.displayTitle = displayTitle\n    this.thumbnail = thumbnail\n    this.description = description\n    this.extract = extract\n  }\n}\n\n/**\n * Makes document fragment for a read more page.\n * @param {!ReadMorePage} readMorePage\n * @param {!number} index\n * @param {!Document} document\n * @return {!DocumentFragment}\n */\nconst documentFragmentForReadMorePage = (readMorePage, index, document) => {\n  const outerAnchorContainer = document.createElement('a')\n  outerAnchorContainer.id = index\n  outerAnchorContainer.className = 'pcs-footer-readmore-page'\n\n  const hasImage = readMorePage.thumbnail && readMorePage.thumbnail.source\n  if (hasImage) {\n    const image = document.createElement('div')\n    image.style.backgroundImage = `url(${readMorePage.thumbnail.source})`\n    image.classList.add('pcs-footer-readmore-page-image')\n    outerAnchorContainer.appendChild(image)\n  }\n\n  const innerDivContainer = document.createElement('div')\n  innerDivContainer.classList.add('pcs-footer-readmore-page-container')\n  outerAnchorContainer.appendChild(innerDivContainer)\n  outerAnchorContainer.setAttribute('title', readMorePage.title)\n  outerAnchorContainer.setAttribute('data-pcs-source', 'read-more')\n  outerAnchorContainer.href = `./${encodeURI(readMorePage.title)}`\n\n  let titleToShow\n  if (readMorePage.displayTitle) {\n    titleToShow = readMorePage.displayTitle\n  } else if (readMorePage.title) {\n    titleToShow = readMorePage.title\n  }\n\n  if (titleToShow) {\n    const title = document.createElement('div')\n    title.id = index\n    title.className = 'pcs-footer-readmore-page-title'\n    /* DOM sink status: safe - content transform with no user interference */\n    title.innerHTML = titleToShow.replace(/_/g, ' ')\n    outerAnchorContainer.title = readMorePage.title.replace(/_/g, ' ')\n    innerDivContainer.appendChild(title)\n  }\n\n  let description\n  if (readMorePage.description) {\n    description = readMorePage.description\n  }\n  if ((!description || description.length < 10) && readMorePage.extract) {\n    description = cleanExtract(readMorePage.extract)\n  }\n  if (description) {\n    const descriptionEl = document.createElement('div')\n    descriptionEl.id = index\n    descriptionEl.className = 'pcs-footer-readmore-page-description'\n    /* DOM sink status: safe - content from read more query endpoint */\n    descriptionEl.innerHTML = description\n    innerDivContainer.appendChild(descriptionEl)\n  }\n\n  return document.createDocumentFragment().appendChild(outerAnchorContainer)\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @type {ShowReadMorePagesHandler}\n */\nconst showReadMorePages = (pages, heading, sectionContainerId, pageContainerId, titlesShownHandler,\n  document) => {\n  const shownTitles = []\n  const sectionContainer = document.getElementById(sectionContainerId)\n  const pageContainer = document.getElementById(pageContainerId)\n  setHeading(\n    heading,\n    'pcs-footer-container-readmore-heading',\n    document\n  )\n  pages.forEach((page, index) => {\n    const title = page.titles.normalized\n    shownTitles.push(title)\n    const pageModel = new ReadMorePage(title, page.titles.display, page.thumbnail,\n      page.description, page.extract)\n    const pageFragment = documentFragmentForReadMorePage(pageModel, index, document)\n    pageContainer.appendChild(pageFragment)\n  })\n  titlesShownHandler(shownTitles)\n  sectionContainer.style.display = 'block'\n}\n\n/**\n * URL for retrieving 'Read more' pages for a given title.\n * Leave 'baseURL' null if you don't need to deal with proxying.\n * @param {!string} title\n * @param {!number} count Number of `Read more` items to fetch for this title\n * @param {?string} baseURL\n * @return {!string}\n */\nconst readMoreQueryURL = (title, count, baseURL) =>\n  `${baseURL || ''}/page/related/${title}`\n\n/**\n * Fetches 'Read more' pages and adds them if found.\n * @param {!string} title\n * @param {!string} heading\n * @param {!number} count\n * @param {!string} sectionContainerId\n * @param {!string} pageContainerId\n * @param {?string} baseURL\n * @param {!TitlesShownHandler} titlesShownHandler\n * @param {!Document} document\n * @return {void}\n */\nconst fetchAndAdd = (title, heading, count, sectionContainerId, pageContainerId, baseURL,\n  titlesShownHandler, document) => {\n  const xhr = new XMLHttpRequest() // eslint-disable-line no-undef\n  xhr.open('GET', readMoreQueryURL(title, count, baseURL), true)\n  xhr.onload = () => {\n    let pages\n    try {\n      pages = JSON.parse(xhr.responseText).pages\n    } catch (e) { }\n    if (!(pages && pages.length)) {\n      return\n    }\n    let results\n    if (pages.length > count) {\n      const rand = Math.floor(Math.random() * Math.floor(pages.length - count))\n      results = pages.slice(rand, rand + count)\n    } else {\n      results = pages\n    }\n    showReadMorePages(\n      results,\n      heading,\n      sectionContainerId,\n      pageContainerId,\n      titlesShownHandler,\n      document\n    )\n  }\n  xhr.send()\n}\n\n/**\n * Sets heading element string.\n * @param {!string} headingString\n * @param {!string} headingID\n * @param {!Document} document\n * @return {void}\n */\nconst setHeading = (headingString, headingID, document) => {\n  const headingElement = document.getElementById(headingID)\n  /* DOM sink status: risk? - headingString can be changed by clients */\n  headingElement.innerText = headingString\n  headingElement.title = headingString\n}\n\nexport default {\n  fetchAndAdd,\n  setHeading,\n  test: {\n    cleanExtract,\n    safelyRemoveEnclosures\n  }\n}","import ElementUtilities from './ElementUtilities'\nimport NodeUtilities from './NodeUtilities'\nimport Polyfill from './Polyfill'\n\nconst REFERENCE_SELECTOR = '.reference, .mw-ref'\nconst CITE_FRAGMENT_PREFIX = '#cite_note-'\nconst BACK_LINK_FRAGMENT_PREFIX = '#pcs-ref-back-link-'\nconst BACK_LINK_ATTRIBUTE = 'pcs-back-links'\n\nconst CLASS = {\n  BACK_LINK_ANCHOR: 'pcs-ref-back-link',\n  BACK_LINK_CONTAINER: 'pcs-ref-backlink-container',\n  BODY: 'pcs-ref-body',\n  BODY_HEADER: 'pcs-ref-body-header',\n  BODY_CONTENT: 'pcs-ref-body-content',\n  REF: 'pcs-ref'\n}\n\n\n/**\n * Does this have the proper fragment prefix?\n * @param {!string} href\n * @param {!string} fragmentPrefix fragment prefix to look for\n * @param {?string} pageTitle assumed to be encoded for links\n * @return {!boolean}\n */\nconst hasFragmentPrefix = (href, fragmentPrefix, pageTitle) => {\n  const decodedHref = decodeURIComponent(href)\n  const decodedFragment = decodeURIComponent(fragmentPrefix)\n  if (pageTitle !== undefined) {\n    const decodedPageTitle = decodeURIComponent(pageTitle)\n    const relativePath = `./${decodedPageTitle}`\n    return decodedHref.indexOf(relativePath) === 0 && href.indexOf(decodedFragment) === relativePath.length\n  }\n  return decodedHref.indexOf(decodedFragment) > -1\n\n}\n\n/**\n * Is Citation.\n * @param {!string} href\n * @param {!string} pageTitle - assumed to be encoded for links\n * @return {!boolean}\n */\nconst isCitation = (href, pageTitle) => hasFragmentPrefix(href, CITE_FRAGMENT_PREFIX, pageTitle)\n\n/**\n * Is Back Link.\n * @param {!string} href\n * @param {!string} pageTitle - assumed to be encoded for links\n * @return {!boolean}\n */\nconst isBackLink = (href, pageTitle) => hasFragmentPrefix(href, BACK_LINK_FRAGMENT_PREFIX, pageTitle)\n\n\n/**\n * Determines if node is a text node containing only whitespace.\n * @param {!Node} node\n * @return {!boolean}\n */\nconst isWhitespaceTextNode = node =>\n  Boolean(node) && node.nodeType === Node.TEXT_NODE && Boolean(node.textContent.match(/^\\s+$/))\n\n/**\n * Checks if element has a child anchor with a citation link.\n * @param {!Element} element\n * @return {!boolean}\n */\nconst hasCitationLink = element => {\n  const anchor = element.querySelector('a')\n  return anchor && isCitation(anchor.hash)\n}\n\n/**\n * Get the reference text container.\n * @param {!Document} document\n * @param {!Element} source\n * @return {?HTMLElement}\n */\nconst getRefTextContainer = (document, source) => {\n  const refTextContainerID = source.querySelector('A').getAttribute('href').split('#')[1]\n  const refTextContainer = document.getElementById(refTextContainerID)\n    || document.getElementById(decodeURIComponent(refTextContainerID))\n\n  return refTextContainer\n}\n\n/**\n * Extract reference text free of backlinks.\n * @param {!Document} document\n * @param {!Element} source\n * @return {!string}\n */\nconst collectRefText = (document, source) => {\n  const refTextContainer = getRefTextContainer(document, source)\n  if (!refTextContainer) {\n    return ''\n  }\n  const refTextSpan = refTextContainer.querySelector('span.mw-reference-text')\n  if (!refTextSpan) {\n    return ''\n  }\n  return refTextSpan.innerHTML.trim()\n}\n\n/**\n * Get closest element to node which has class `reference`. If node itself has class `reference`\n * returns the node.\n * @param {!Node} sourceNode\n * @return {?HTMLElement}\n */\nconst closestReferenceClassElement = sourceNode => {\n  if (Polyfill.matchesSelector(sourceNode, REFERENCE_SELECTOR)) {\n    return sourceNode\n  }\n  return ElementUtilities.findClosestAncestor(sourceNode, REFERENCE_SELECTOR)\n}\n\n/**\n * Reference item model.\n */\nclass ReferenceItem {\n  /**\n   * ReferenceItem constructor.\n   * @param {!string} id\n   * @param {!DOMRect} rect\n   * @param {?string} text\n   * @param {?string} html\n   * @param {?string} href\n   */\n  constructor(id, rect, text, html, href) {\n    this.id = id\n    this.rect = rect\n    this.text = text\n    this.html = html\n    this.href = href\n  }\n}\n\n/**\n * Reference item model.\n */\nclass ReferenceLinkItem {\n  /**\n   * ReferenceLinkItem construtor.\n   * @param {!string} href\n   * @param {?string} text\n   */\n  constructor(href, text) {\n    this.href = href\n    this.text = text\n  }\n}\n\n/**\n * Converts node to ReferenceItem.\n * @param {!Document} document\n * @param {!Node} node\n * @return {!ReferenceItem}\n */\nconst referenceItemForNode = (document, node) => new ReferenceItem(\n  closestReferenceClassElement(node).id,\n  NodeUtilities.getBoundingClientRectAsPlainObject(node),\n  node.textContent,\n  collectRefText(document, node),\n  node.querySelector('A').getAttribute('href')\n)\n\n/**\n * Converts node to ReferenceLinkItem.\n * @param {!Document} document\n * @param {!Node} node\n * @return {!ReferenceItem}\n */\nconst referenceLinkItemForNode = (document, node) => new ReferenceLinkItem(\n  node.querySelector('A').getAttribute('href'),\n  node.textContent\n)\n\n/**\n * Container for nearby references including the index of the selected reference.\n */\nclass NearbyReferences {\n/**\n * @param {!number} selectedIndex\n * @param {!Array.<ReferenceItem>} referencesGroup\n * @return {!NearbyReferences}\n */\n  constructor(selectedIndex, referencesGroup) {\n    this.selectedIndex = selectedIndex\n    this.referencesGroup = referencesGroup\n  }\n}\n\n/**\n * Closure around a node for getting previous or next sibling.\n *\n * @typedef SiblingGetter\n * @param {!Node} node\n * @return {?Node}\n */\n\n/**\n  * Closure around `collectedNodes` for collecting reference nodes.\n  *\n  * @typedef Collector\n  * @param {!Node} node\n  * @return {void}\n  */\n\n/**\n * Get adjacent non-whitespace node.\n * @param {!Node} node\n * @param {!SiblingGetter} siblingGetter\n * @return {?Node}\n */\nconst adjacentNonWhitespaceNode = (node, siblingGetter) => {\n  let currentNode = node\n  do {\n    currentNode = siblingGetter(currentNode)\n  } while (isWhitespaceTextNode(currentNode))\n  return currentNode\n}\n\n/**\n * Collect adjacent reference nodes. The starting node is not collected.\n * @param {!Node} node\n * @param {!SiblingGetter} siblingGetter\n * @param {!Collector} nodeCollector\n * @return {void}\n */\nconst collectAdjacentReferenceNodes = (node, siblingGetter, nodeCollector) => {\n  let currentNode = node\n  while (true) {\n    currentNode = adjacentNonWhitespaceNode(currentNode, siblingGetter)\n    if (!currentNode || currentNode.nodeType !== Node.ELEMENT_NODE\n        || !hasCitationLink(currentNode)) {\n      break\n    }\n    nodeCollector(currentNode)\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n/** @type {SiblingGetter} */\nconst prevSiblingGetter = node => node.previousSibling\n\n/** @type {SiblingGetter} */\nconst nextSiblingGetter = node => node.nextSibling\n/* eslint-enable valid-jsdoc */\n\n/**\n * Collect nearby reference nodes.\n * @param {!Node} sourceNode\n * @return {!Array.<Node>}\n */\nconst collectNearbyReferenceNodes = sourceNode => {\n  const collectedNodes = [sourceNode]\n\n  /* eslint-disable require-jsdoc */\n  // These are `Collector`s.\n  const collectedNodesUnshifter = node => collectedNodes.unshift(node)\n  const collectedNodesPusher = node => collectedNodes.push(node)\n  /* eslint-enable require-jsdoc */\n\n  collectAdjacentReferenceNodes(sourceNode, prevSiblingGetter, collectedNodesUnshifter)\n  collectAdjacentReferenceNodes(sourceNode, nextSiblingGetter, collectedNodesPusher)\n\n  return collectedNodes\n}\n\n/**\n * Reads the BACK_LINK_ATTRIBUTE and returns a list of back link hrefs\n * @param {Element} element to read the back links from\n * @return {Array.<string>} hrefs of the back links\n */\nconst getBackLinks = element => {\n  const backLinksJSON = element.getAttribute(BACK_LINK_ATTRIBUTE)\n  if (!backLinksJSON) {\n    return []\n  }\n  return JSON.parse(backLinksJSON)\n}\n\n/**\n * Collect nearby reference nodes.\n * @param {!Document} document\n * @param {!Element} target\n * @param {!string} href\n * @return {!{referenceId, referenceText, backLinks, href}}\n */\nconst collectReferencesForBackLink = (document, target, href) => {\n  const backLinkHrefs = getBackLinks(target)\n  if (!backLinkHrefs || backLinkHrefs.length === 0) {\n    return {}\n  }\n  const referenceId = href.split(BACK_LINK_FRAGMENT_PREFIX)[1]\n  let referenceText\n  const backLinks = []\n  // Used as fallback. Send the href of the first back link as the event href\n  const firstBackLinkHref = backLinkHrefs[0]\n  for (let i = 0; i < backLinkHrefs.length; i++) {\n    const backLinkHref = backLinkHrefs[i]\n    const id = backLinkHref.split('#')[1]\n    const element = document.getElementById(id)\n    if (!element) {\n      continue\n    }\n    if (!referenceText) {\n      referenceText = element.textContent.trim()\n    }\n    // Use an object with id to allow for adding more properties in the future\n    backLinks.push({ id })\n  }\n  return { referenceId, referenceText, backLinks, href: firstBackLinkHref }\n}\n\n\n/**\n * Collect nearby references.\n * @param {!Document} document\n * @param {!Node} referenceElement\n * @return {!NearbyReferences}\n */\nconst collectNearbyReferenceForReferenceElement = (document, referenceElement) => {\n  const referenceNodes = collectNearbyReferenceNodes(referenceElement)\n  const selectedIndex = referenceNodes.indexOf(referenceElement)\n  const referencesGroup = referenceNodes.map(node => referenceItemForNode(document, node))\n  return new NearbyReferences(selectedIndex, referencesGroup)\n}\n\n/**\n * Collect nearby references.\n * @param {!Document} document\n * @param {!Node} sourceNode\n * @return {!NearbyReferences}\n */\nconst collectNearbyReferences = (document, sourceNode) => {\n  const sourceNodeParent = sourceNode.parentElement // reference is the parent of the <a> tag\n  return collectNearbyReferenceForReferenceElement(document, sourceNodeParent)\n}\n\n/**\n * Collect nearby references.\n * @param {!Document} document\n * @param {!Node} sourceNode\n * @return {!NearbyReferences}\n */\nconst collectNearbyReferencesAsText = (document, sourceNode) => {\n  const sourceNodeParent = sourceNode.parentElement\n  const referenceNodes = collectNearbyReferenceNodes(sourceNodeParent)\n  const selectedIndex = referenceNodes.indexOf(sourceNodeParent)\n  const referencesGroup = referenceNodes.map(node => referenceLinkItemForNode(document, node))\n  return new NearbyReferences(selectedIndex, referencesGroup)\n}\n\nexport default {\n  collectNearbyReferences,\n  collectNearbyReferencesAsText,\n  collectReferencesForBackLink,\n  isBackLink,\n  isCitation,\n  CLASS,\n  BACK_LINK_FRAGMENT_PREFIX,\n  BACK_LINK_ATTRIBUTE,\n  test: {\n    adjacentNonWhitespaceNode,\n    closestReferenceClassElement,\n    collectAdjacentReferenceNodes,\n    collectNearbyReferenceNodes,\n    collectRefText,\n    getRefTextContainer,\n    hasCitationLink,\n    isWhitespaceTextNode,\n    nextSiblingGetter,\n    prevSiblingGetter\n  }\n}","/**\n * Sets text size adjustment percentage of the body element\n * @param  {!HTMLBodyElement} body that needs the margins adjusted.\n * @param  {!string} textSize percentage for text-size-adjust in format of string, like '100%'\n * @return {void}\n */\nconst setPercentage = (body: HTMLBodyElement, textSize: string): void => {\n    if (textSize){\n        // casting body style to avoid errors with the subscript operator and typescript\n        // see https://stackoverflow.com/questions/37655393\n        (<any>body.style)['-webkit-text-size-adjust'] = textSize;\n        (<any>body.style)['text-size-adjust'] = textSize;\n    }\n}\n\n\nexport default {\n    setPercentage\n}","interface Spacing {\n  top?: string\n  right?: string\n  bottom?: string\n  left?: string\n}\n\n/**\n * Sets the margins on an element via inline styles.\n * @param {!HTMLBodyElement} bodyElement the element that needs the margins adjusted.\n *   For the apps this is usually the body element.\n * @param {Spacing} values { top, right, bottom, left }\n *   Use value strings with units, e.g. '16px'. Undefined values are ignored.\n * @return {void}\n */\nconst setMargins = (bodyElement: HTMLBodyElement, values: Spacing): void => {\n  if (values.top !== undefined) {\n    bodyElement.style.marginTop = values.top\n  }\n  if (values.right !== undefined) {\n    bodyElement.style.marginRight = values.right\n  }\n  if (values.bottom !== undefined) {\n    bodyElement.style.marginBottom = values.bottom\n  }\n  if (values.left !== undefined) {\n    bodyElement.style.marginLeft = values.left\n  }\n}\n\n/**\n * Sets padding on an element via inline styles.\n * @param {!HTMLBodyElement} bodyElement the element that needs the padding adjusted.\n *   For the apps this is usually the body element.\n * @param {Spacing} values { top, right, bottom, left }\n *   Use value strings with units, e.g. '16px'. Undefined values are ignored.\n * @return {void}\n */\nconst setPadding = (bodyElement: HTMLBodyElement, values: Spacing): void => {\n  if (values.top !== undefined) {\n    bodyElement.style.paddingTop = values.top\n  }\n  if (values.right !== undefined) {\n    bodyElement.style.paddingRight = values.right\n  }\n  if (values.bottom !== undefined) {\n    bodyElement.style.paddingBottom = values.bottom\n  }\n  if (values.left !== undefined) {\n    bodyElement.style.paddingLeft = values.left\n  }\n}\n\nexport default {\n  setMargins,\n  setPadding\n}","import './DimImagesTransform.css'\nconst CLASS = 'pcs-dim-images'\n\n/**\n * @param {!Document} document\n * @param {!boolean} enable\n * @return {void}\n */\nconst dimImages = (document, enable) => {\n  document.body.classList[enable ? 'add' : 'remove'](CLASS)\n}\n\n/**\n * @deprecated Use dimImages instead, which only requires a Document\n * @param {!Window} window\n * @param {!boolean} enable\n * @return {void}\n */\nconst dim = (window, enable) => dimImages(window.document, enable)\n\n/**\n * @param {!Document} document\n * @return {boolean}\n */\nconst areImagesDimmed = document => document.body.classList.contains(CLASS)\n\n/**\n * @deprecated Use areImagesDimmed instead, which only requires a Document\n * @param {!Window} window\n * @return {boolean}\n */\nconst isDim = window => areImagesDimmed(window.document)\n\nexport default {\n  CLASS,\n  dim,\n  isDim,\n  dimImages,\n  areImagesDimmed,\n}","import CollapseTable from './CollapseTable'\nimport ElementUtilities from './ElementUtilities'\nimport LazyLoadTransform from './LazyLoadTransform'\nimport Polyfill from './Polyfill'\nimport Throttle from './Throttle'\n\nconst EVENT_TYPES = ['scroll', 'resize', CollapseTable.SECTION_TOGGLED_EVENT_TYPE]\nconst THROTTLE_PERIOD_MILLISECONDS = 100\n\n/**\n * This class subscribes to key page events, applying lazy load transforms or inversions as\n * applicable. It has external dependencies on the section-toggled custom event and the following\n * standard browser events: resize, scroll.\n */\nexport default class {\n  /**\n   * @param {!Window} window\n   * @param {!number} loadDistanceMultiplier Images within this multiple of the screen height are\n   *                                         loaded in either direction.\n   */\n  constructor(window, loadDistanceMultiplier) {\n    this._window = window\n    this._loadDistanceMultiplier = loadDistanceMultiplier\n\n    this._placeholders = []\n    this._registered = false\n    this._throttledLoadPlaceholders = Throttle.wrap(window, THROTTLE_PERIOD_MILLISECONDS,\n      () => this._loadPlaceholders())\n  }\n\n  /**\n   * Convert images with placeholders. Calling this function may register this instance to listen to\n   * page events.\n   * @param {!Element} element\n   * @return {void}\n   */\n  convertImagesToPlaceholders(element) {\n    const images = LazyLoadTransform.queryLazyLoadableImages(element)\n    const placeholders = LazyLoadTransform.convertImagesToPlaceholders(this._window.document,\n      images)\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Searches for existing placeholders in the DOM Document.\n   * This is an alternative to #convertImagesToPlaceholders if that was already done server-side.\n   * @param {!Element} element root element to start searching for placeholders\n   * @return {void}\n   */\n  collectExistingPlaceholders(element) {\n    const placeholders\n      = Polyfill.querySelectorAll(element, `.${LazyLoadTransform.PLACEHOLDER_CLASS}`)\n    this._placeholders = this._placeholders.concat(placeholders)\n    this._register()\n  }\n\n  /**\n   * Manually trigger a load images check. Calling this function may deregister this instance from\n   * listening to page events.\n   * @return {void}\n   */\n  loadPlaceholders() { this._throttledLoadPlaceholders() }\n\n  /**\n   * This method may be safely called even when already unregistered. This function clears the\n   * record of placeholders.\n   * @return {void}\n   */\n  deregister() {\n    if (!this._registered) { return }\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.removeEventListener(eventType, this._throttledLoadPlaceholders))\n    this._throttledLoadPlaceholders.reset()\n\n    this._placeholders = []\n    this._registered = false\n  }\n\n  /**\n   * This method may be safely called even when already registered.\n   * @return {void}\n   */\n  _register() {\n    if (this._registered || !this._placeholders.length) { return }\n    this._registered = true\n\n    EVENT_TYPES.forEach(eventType =>\n      this._window.addEventListener(eventType, this._throttledLoadPlaceholders))\n  }\n\n  /** @return {void} */\n  _loadPlaceholders() {\n    this._placeholders = this._placeholders.filter(placeholder => {\n      let pending = true\n      if (this._isPlaceholderEligibleToLoad(placeholder)) {\n        LazyLoadTransform.loadPlaceholder(this._window.document, placeholder)\n        pending = false\n      }\n      return pending\n    })\n\n    if (this._placeholders.length === 0) {\n      this.deregister()\n    }\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderEligibleToLoad(placeholder) {\n    return ElementUtilities.isVisible(placeholder)\n      && this._isPlaceholderWithinLoadDistance(placeholder)\n  }\n\n  /**\n   * @param {!HTMLSpanElement} placeholder\n   * @return {!boolean}\n   */\n  _isPlaceholderWithinLoadDistance(placeholder) {\n    const bounds = placeholder.getBoundingClientRect()\n    const range = this._window.innerHeight * this._loadDistanceMultiplier\n    return !(bounds.top > range || bounds.bottom < -range)\n  }\n}","/* eslint-disable sort-imports */\n\n// We want the theme transform to be first. This is because the theme transform CSS has to use\n// some '!important' CSS modifiers to reliably set themes on elements which may contain inline\n// styles. Moving it to the top of the file is necessary so other transforms can override\n// these '!important' themes transform CSS bits if needed. Note - if other transforms have trouble\n// overriding things changed by theme transform remember to match or exceed the selector specificity\n// used by the theme transform for whatever it is you are trying to override.\nimport ThemeTransform from './ThemeTransform'\n\nimport AdjustTextSize from './AdjustTextSize'\nimport BodySpacingTransform from './BodySpacingTransform'\nimport CollapseTable from './CollapseTable'\nimport CollectionUtilities from './CollectionUtilities'\nimport CompatibilityTransform from './CompatibilityTransform'\nimport DimImagesTransform from './DimImagesTransform'\nimport EditTransform from './EditTransform'\nimport ElementGeometry from './ElementGeometry'\nimport ElementUtilities from './ElementUtilities'\nimport LeadIntroductionTransform from './LeadIntroductionTransform'\nimport FooterContainer from './FooterContainer'\nimport FooterLegal from './FooterLegal'\nimport FooterMenu from './FooterMenu'\nimport FooterReadMore from './FooterReadMore'\nimport LazyLoadTransform from './LazyLoadTransform'\nimport LazyLoadTransformer from './LazyLoadTransformer'\nimport PlatformTransform from './PlatformTransform'\nimport Polyfill from './Polyfill'\nimport RedLinks from './RedLinks'\nimport ReferenceCollection from './ReferenceCollection'\nimport Throttle from './Throttle'\nimport SectionUtilities from './SectionUtilities'\nimport WidenImage from './WidenImage'\nimport './OrderedList.css'\nimport './Sections.css'\nimport './References.css'\n\nexport default {\n  AdjustTextSize,\n  BodySpacingTransform,\n  // todo: rename CollapseTableTransform.\n  CollapseTable,\n  CollectionUtilities,\n  CompatibilityTransform,\n  DimImagesTransform,\n  EditTransform,\n  // todo: rename Footer.ContainerTransform, Footer.LegalTransform, Footer.MenuTransform,\n  //       Footer.ReadMoreTransform.\n  LeadIntroductionTransform,\n  FooterContainer,\n  FooterLegal,\n  FooterMenu,\n  FooterReadMore,\n  LazyLoadTransform,\n  LazyLoadTransformer,\n  PlatformTransform,\n  // todo: rename RedLinkTransform.\n  RedLinks,\n  ReferenceCollection,\n  SectionUtilities,\n  ThemeTransform,\n  // todo: rename WidenImageTransform.\n  WidenImage,\n  test: {\n    ElementGeometry,\n    ElementUtilities,\n    Polyfill,\n    Throttle\n  }\n}","const COMPATIBILITY = {\n  FILTER: 'pcs-compatibility-filter'\n}\n\n/**\n * @param {!Document} document\n * @param {!Array.<string>} properties\n * @param {!string} value\n * @return {void}\n */\nconst isStyleSupported = (document, properties, value) => {\n  const element = document.createElement('span')\n  return properties.some(property => {\n    element.style[property] = value\n    return element.style.cssText\n  })\n}\n\n/**\n * @param {!Document} document\n * @return {void}\n */\nconst isFilterSupported = document =>\n  isStyleSupported(document, ['webkitFilter', 'filter'], 'blur(0)')\n\n/**\n * @param {!Document} document\n * @return {void}\n */\nconst enableSupport = document => {\n  const html = document.documentElement\n  if (!isFilterSupported(document)) { html.classList.add(COMPATIBILITY.FILTER) }\n}\n\nexport default {\n  COMPATIBILITY,\n  enableSupport\n}","const ELEMENT_NODE = 1\n\n/**\n * Determine if paragraph is the one we are interested in.\n * @param  {!HTMLParagraphElement}  paragraphElement\n * @return {!boolean}\n */\nconst isParagraphEligible = paragraphElement => {\n  // Ignore 'coordinates' which are presently hidden. See enwiki 'Bolton Field' and 'Sharya Forest\n  // Museum Railway'. Not counting coordinates towards the eligible P min textContent length\n  // heuristic has dual effect of P's containing only coordinates being rejected, and P's containing\n  // coordinates but also other elements meeting the eligible P min textContent length being\n  // accepted.\n  const coordElement = paragraphElement.querySelector('[id=\"coordinates\"]')\n  const coordTextLength = !coordElement ? 0 : coordElement.textContent.length\n\n  // Ensures the paragraph has at least a little text. Otherwise silly things like a empty P or P\n  // which only contains a BR tag will get pulled up. See enwiki 'Hawaii', 'United States',\n  // 'Academy (educational institution)', 'Lovászpatona'\n  const minEligibleTextLength = 50\n  const hasEnoughEligibleText =\n    paragraphElement.textContent.length - coordTextLength >= minEligibleTextLength\n  return hasEnoughEligibleText\n}\n\n/**\n * Nodes we want to move up. This includes the `eligibleParagraph` and everything up to (but not\n * including) the next paragraph.\n * @param  {!HTMLParagraphElement} eligibleParagraph\n * @return {!Array.<Node>} Array of text nodes, elements, etc...\n */\nconst extractLeadIntroductionNodes = eligibleParagraph => {\n  const introNodes = []\n  let node = eligibleParagraph\n  do {\n    introNodes.push(node)\n    node = node.nextSibling\n  } while (node && !(node.nodeType === ELEMENT_NODE && node.tagName === 'P'))\n  return introNodes\n}\n\n/**\n * Locate first eligible paragraph. We don't want paragraphs from somewhere in the middle of a\n * table, so only paragraphs which are direct children of `element` element are considered.\n * @param  {!Document} document\n * @param  {!Element} container the section under examination.\n * @return {?HTMLParagraphElement}\n */\nconst getEligibleParagraph = (document, container) => {\n  if (!container) {\n    return\n  }\n\n  let el = container.firstElementChild\n  while (el) {\n    if (el.tagName === 'P' && isParagraphEligible(el)) {\n      return el\n    }\n    el = el.nextElementSibling\n  }\n}\n\n\n/**\n * Instead of moving the infobox down beneath the first P tag, move the first eligible P tag\n * (and related elements) up. This ensures some text will appear above infoboxes, tables, images\n * etc. This method does not do a 'mainpage' check - do so before calling it.\n * @param  {!Document} document\n * @param  {!Element} container the section under examination.\n * @param  {?Element} afterElement Element after which paragraph will be moved. If not specified\n * paragraph will be move to top of `containerID` element.\n * @return {void}\n */\nconst moveLeadIntroductionUp = (document, container, afterElement) => {\n  const eligibleParagraph = getEligibleParagraph(document, container)\n  if (!eligibleParagraph) {\n    return\n  }\n\n  // A light-weight fragment to hold everything we want to move up.\n  const fragment = document.createDocumentFragment()\n  // DocumentFragment's `appendChild` attaches the element to the fragment AND removes it from DOM.\n  /* DOM sink status: safe - content transform with no user interference */\n  extractLeadIntroductionNodes(eligibleParagraph).forEach(element => fragment.appendChild(element))\n\n  const insertBeforeThisElement = !afterElement ? container.firstChild : afterElement.nextSibling\n\n  // Attach the fragment just before `insertBeforeThisElement`. Conveniently, `insertBefore` on a\n  // DocumentFragment inserts 'the children of the fragment, not the fragment itself.', so no\n  // unnecessary container element is introduced.\n  // https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\n  container.insertBefore(fragment, insertBeforeThisElement)\n}\n\nexport default {\n  moveLeadIntroductionUp,\n  test: {\n    isParagraphEligible,\n    extractLeadIntroductionNodes,\n    getEligibleParagraph\n  }\n}","import Polyfill from './Polyfill'\n\n/**\n * Configures span to be suitable replacement for red link anchor.\n * @param {!HTMLSpanElement} span The span element to configure as anchor replacement.\n * @param {!HTMLAnchorElement} anchor The anchor element being replaced.\n * @return {void}\n */\nconst configureRedLinkTemplate = (span, anchor) => {\n  /* DOM sink status: safe - content from parsoid output */\n  span.innerHTML = anchor.innerHTML\n  span.setAttribute('class', anchor.getAttribute('class'))\n}\n\n/**\n * Finds red links in a document.\n * @param {!Document} content Document in which to seek red links.\n * @return {!Array.<HTMLAnchorElement>} Array of zero or more red link anchors.\n */\nconst redLinkAnchorsInDocument = content => Polyfill.querySelectorAll(content, 'a.new')\n\n/**\n * Makes span to be used as cloning template for red link anchor replacements.\n * @param  {!Document} document Document to use to create span element.\n * @return {!HTMLSpanElement} Span element suitable for use as template for red link anchor\n * replacements.\n */\nconst newRedLinkTemplate = document => document.createElement('span')\n\n/**\n * Replaces anchor with span.\n * @param  {!HTMLAnchorElement} anchor Anchor element.\n * @param  {!HTMLSpanElement} span Span element.\n * @return {void}\n */\nconst replaceAnchorWithSpan = (anchor, span) => anchor.parentNode.replaceChild(span, anchor)\n\n/**\n * Hides red link anchors in a document so they are unclickable and unfocusable.\n * @param {!Document} document Document in which to hide red links.\n * @return {void}\n */\nconst hideRedLinks = document => {\n  const spanTemplate = newRedLinkTemplate(document)\n  redLinkAnchorsInDocument(document)\n    .forEach(redLink => {\n      const span = spanTemplate.cloneNode(false)\n      configureRedLinkTemplate(span, redLink)\n      /* DOM sink status: safe - content from parsoid output  */\n      replaceAnchorWithSpan(redLink, span)\n    })\n}\n\nexport default {\n  hideRedLinks,\n  test: {\n    configureRedLinkTemplate,\n    redLinkAnchorsInDocument,\n    newRedLinkTemplate,\n    replaceAnchorWithSpan\n  }\n}","import './WidenImage.css'\n\n/**\n * Gets array of ancestors of element which need widening.\n * @param  {!HTMLElement} element\n * @return {!Array.<HTMLElement>} Zero length array is returned if no elements should be widened.\n */\nconst ancestorsToWiden = element => {\n  const widenThese = []\n  let el = element\n  while (el.parentElement) {\n    el = el.parentElement\n    // No need to walk above the section.\n    if (el.tagName === 'SECTION') {\n      break\n    }\n    widenThese.push(el)\n  }\n  return widenThese\n}\n\n/**\n * Sets style value.\n * @param {!CSSStyleDeclaration} style\n * @param {!string} key\n * @param {*} value\n * @return {void}\n */\nconst updateStyleValue = (style, key, value) => {\n  style[key] = value\n}\n\n/**\n * Sets style value only if value for given key already exists.\n * @param {CSSStyleDeclaration} style\n * @param {!string} key\n * @param {*} value\n * @return {void}\n */\nconst updateExistingStyleValue = (style, key, value) => {\n  const valueExists = Boolean(style[key])\n  if (valueExists) {\n    updateStyleValue(style, key, value)\n  }\n}\n\n/**\n * Image widening CSS key/value pairs.\n * @type {Object}\n */\nconst styleWideningKeysAndValues = {\n  width: '100%',\n  height: 'auto',\n  maxWidth: '100%',\n  float: 'none'\n}\n\n/**\n * Perform widening on an element. Certain style properties are updated, but only if existing values\n * for these properties already exist.\n * @param  {!HTMLElement} element\n * @return {void}\n */\nconst widenElementByUpdatingExistingStyles = element => {\n  Object.keys(styleWideningKeysAndValues)\n    .forEach(key => updateExistingStyleValue(element.style, key, styleWideningKeysAndValues[key]))\n}\n\n/**\n * Perform widening on an element.\n * @param  {!HTMLElement} element\n * @return {void}\n */\nconst widenElementByUpdatingStyles = element => {\n  Object.keys(styleWideningKeysAndValues)\n    .forEach(key => updateStyleValue(element.style, key, styleWideningKeysAndValues[key]))\n}\n\n/**\n * To widen an image element a css class called 'pcs-widen-image-override' is applied to the\n * image element, however, ancestors of the image element can prevent the widening from taking\n * effect. This method makes minimal adjustments to ancestors of the image element being widened so\n * the image widening can take effect.\n * @param  {!HTMLElement} element Element whose ancestors will be widened\n * @return {void}\n */\nconst widenAncestors = element => {\n  ancestorsToWiden(element).forEach(widenElementByUpdatingExistingStyles)\n}\n\n/**\n * Widens the image.\n * @param  {!HTMLElement} image   The image in question\n * @return {void}\n */\nconst widenImage = image => {\n  widenAncestors(image)\n  image.classList.add('pcs-widen-image-override')\n}\n\nexport default {\n  widenImage,\n  test: {\n    ancestorsToWiden,\n    updateExistingStyleValue,\n    widenAncestors,\n    widenElementByUpdatingExistingStyles,\n    widenElementByUpdatingStyles\n  }\n}"],"sourceRoot":""}